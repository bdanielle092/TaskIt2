[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js":"17"},{"size":716,"mtime":1612459642743,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":524,"mtime":1612459642636,"results":"21","hashOfConfig":"19"},{"size":1764,"mtime":1612679352468,"results":"22","hashOfConfig":"19"},{"size":3596,"mtime":1612670335790,"results":"23","hashOfConfig":"19"},{"size":2346,"mtime":1612675085041,"results":"24","hashOfConfig":"19"},{"size":2536,"mtime":1612642676980,"results":"25","hashOfConfig":"19"},{"size":3800,"mtime":1612459642757,"results":"26","hashOfConfig":"19"},{"size":1316,"mtime":1612672391054,"results":"27","hashOfConfig":"19"},{"size":2347,"mtime":1612676855334,"results":"28","hashOfConfig":"19"},{"size":1780,"mtime":1612673307304,"results":"29","hashOfConfig":"19"},{"size":1626,"mtime":1612488173193,"results":"30","hashOfConfig":"19"},{"size":2358,"mtime":1612680551084,"results":"31","hashOfConfig":"19"},{"size":3832,"mtime":1612654088782,"results":"32","hashOfConfig":"19"},{"size":4963,"mtime":1612681063864,"results":"33","hashOfConfig":"19"},{"size":1950,"mtime":1612674300695,"results":"34","hashOfConfig":"19"},{"size":4201,"mtime":1612681247439,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"v3c2y3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["76","77"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",["78"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavItem,\r\n    Button\r\n} from 'reactstrap';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport logo from \"../images/logo2.png\";\r\nimport \"./Header.css\"\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const { logout } = useContext(UserProfileContext);\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const history = useHistory();\r\n    const [newButton, setNewButton] = useState(\"\")\r\n\r\n\r\n\r\n\r\n    //allow the user to logout\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    //taking the user to the board form \r\n    const goToBoardForm = () => {\r\n        history.push(\"/BoardForm\");\r\n    }\r\n\r\n    const showNewButton = () => {\r\n        const pathName = window.location.pathname\r\n        const taskPage = pathName.includes(\"board/\")\r\n\r\n        if (taskPage) {\r\n            setNewButton(\"task\")\r\n        } else {\r\n            setNewButton(\"board\")\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        showNewButton()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"dark\" dark expand=\"md\">\r\n                <a href=\"/\"><img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"mr-1\"\r\n                />\r\n                </a>\r\n\r\n\r\n\r\n                <Nav className=\"mr-auto logout\" navbar>\r\n                    {user ? (\r\n                        <>\r\n\r\n\r\n                            <NavItem >\r\n                                <Button color=\"warning\" onClick={goToBoardForm} >New {newButton == \"task\" ? \"Task\" : \"Board\"}</Button>{' '}\r\n                            </NavItem>\r\n\r\n                            <NavItem className=\"logoutButton\">\r\n                                <Button color=\"warning\" onClick={logoutAndReturn}>Logout</Button>{' '}\r\n                            </NavItem>\r\n                        </>\r\n                    ) : null}\r\n                </Nav>\r\n\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["79"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col } from \"reactstrap\"\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [boards, setBoards] = useState([])\r\n\r\n\r\n    //getting the all the boards for this user\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((boards) =>\r\n\r\n                setBoards(boards));\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n            < h1 className=\"home\" > Welcome {user.name.split(\" \")[0]} !</h1 >\r\n            <p className=\"home2\">Click on a {\" \"}<strong className=\"tag\">Board</strong>{\" \"}to view tasks</p>\r\n            <Col className=\"listOfBoards\">\r\n                <BoardList boards={boards} />\r\n            </Col>\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",["80"],"import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Row } from 'reactstrap';\r\n\r\nconst BoardList = ({ boards }) => {\r\n    const history = useHistory();\r\n\r\n    //taking user to the edit form   \r\n    const goToBoardEditForm = (boardId) => {\r\n        history.push(`/BoardEditForm/${boardId}`);\r\n    }\r\n\r\n    //mapping through the list of boards\r\n    return (\r\n        <div>\r\n            {boards.map((board) => (\r\n                <div key={board.id} >\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/board/${board.id}`}>\r\n                                <strong>{board.name}</strong>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle caret>\r\n                                    {board.name} Actions\r\n                </DropdownToggle>\r\n                                <DropdownMenu >\r\n                                    <DropdownItem onClick={() => goToBoardEditForm(board.id)} >Edit {board.name} Board</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem>Delete {board.name} Board</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row><br></br></Row>\r\n                </div>\r\n            ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default BoardList ","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],["81","82"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["83","84","85","86","87"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["88"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst BoardEditForm = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    //this is a empty string but when the page initially gets loaded then the string will be updated with the current name of the board\r\n    const [boardToEdit, setBoardToEdit] = useState(\"\")\r\n    //this the existing board object that is gets loads ar initial load too.\r\n    const [existingBoard, setExistingBoard] = useState({})\r\n\r\n    //this is getting the current state of the board base off the id passed in the uri and setting existingBoard and boardToEdit\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => {\r\n                setExistingBoard(board)\r\n                setBoardToEdit(board[\"name\"])\r\n            });\r\n\r\n    }, []);\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleSubmit = (evt) => {\r\n        const newBoard = evt.target.value;\r\n        setBoardToEdit(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const updateBoard = (board) => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        //keeping all the existing keys the same except name\r\n                        \"active\": existingBoard[\"active\"],\r\n                        \"id\": existingBoard[\"id\"],\r\n                        \"name\": boardToEdit,\r\n                        \"userProfile\": existingBoard[\"userProfile\"],\r\n                        \"userProfileId\": existingBoard[\"userProfileId\"]\r\n                    }),\r\n                })\r\n            )\r\n            .then((evt) => history.push(\"/\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={boardToEdit}\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleSubmit(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            updateBoard(boardToEdit);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["89","90","91","92","93","94"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":77,"column":97,"nodeType":"102","messageId":"103","endLine":77,"endColumn":99},{"ruleId":"104","severity":1,"message":"105","line":31,"column":8,"nodeType":"106","endLine":31,"endColumn":10,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"108","severity":1,"message":"114","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":22},{"ruleId":"108","severity":1,"message":"115","line":4,"column":24,"nodeType":"110","messageId":"111","endLine":4,"endColumn":36},{"ruleId":"108","severity":1,"message":"116","line":4,"column":38,"nodeType":"110","messageId":"111","endLine":4,"endColumn":52},{"ruleId":"108","severity":1,"message":"117","line":4,"column":54,"nodeType":"110","messageId":"111","endLine":4,"endColumn":74},{"ruleId":"104","severity":1,"message":"118","line":61,"column":8,"nodeType":"106","endLine":61,"endColumn":10,"suggestions":"119"},{"ruleId":"104","severity":1,"message":"118","line":42,"column":8,"nodeType":"106","endLine":42,"endColumn":10,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":4,"column":18,"nodeType":"110","messageId":"111","endLine":4,"endColumn":21},{"ruleId":"108","severity":1,"message":"122","line":4,"column":36,"nodeType":"110","messageId":"111","endLine":4,"endColumn":40},{"ruleId":"108","severity":1,"message":"123","line":10,"column":12,"nodeType":"110","messageId":"111","endLine":10,"endColumn":17},{"ruleId":"108","severity":1,"message":"124","line":10,"column":19,"nodeType":"110","messageId":"111","endLine":10,"endColumn":27},{"ruleId":"108","severity":1,"message":"125","line":21,"column":11,"nodeType":"110","messageId":"111","endLine":21,"endColumn":29},{"ruleId":"104","severity":1,"message":"126","line":50,"column":8,"nodeType":"106","endLine":50,"endColumn":10,"suggestions":"127"},{"ruleId":"104","severity":1,"message":"128","line":30,"column":8,"nodeType":"106","endLine":30,"endColumn":10,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["132"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["130"],["131"],"'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","React Hook useEffect has missing dependencies: 'boardId' and 'getToken'. Either include them or remove the dependency array.",["133"],["134"],"'Col' is defined but never used.","'Form' is defined but never used.","'board' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'onCheckboxBtnClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'taskId'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'createBoardId'. Either include it or remove the dependency array.",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"139","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [getToken]",{"range":"146","text":"147"},"Update the dependencies array to be: [boardId, getToken]",{"range":"148","text":"149"},{"range":"150","text":"149"},"Update the dependencies array to be: [getToken, taskId]",{"range":"151","text":"152"},"Update the dependencies array to be: [createBoardId]",{"range":"153","text":"154"},[905,907],"[getToken]",[1743,1745],"[boardId, getToken]",[1446,1448],[1847,1849],"[getToken, taskId]",[845,847],"[createBoardId]"]