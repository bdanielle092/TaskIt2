[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16"},{"size":716,"mtime":1612459642743,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":524,"mtime":1612459642636,"results":"20","hashOfConfig":"18"},{"size":1559,"mtime":1612654232868,"results":"21","hashOfConfig":"18"},{"size":3594,"mtime":1612642676988,"results":"22","hashOfConfig":"18"},{"size":1900,"mtime":1612642676949,"results":"23","hashOfConfig":"18"},{"size":2536,"mtime":1612642676980,"results":"24","hashOfConfig":"18"},{"size":3800,"mtime":1612459642757,"results":"25","hashOfConfig":"18"},{"size":1347,"mtime":1612642676959,"results":"26","hashOfConfig":"18"},{"size":2346,"mtime":1612642676930,"results":"27","hashOfConfig":"18"},{"size":504,"mtime":1612642676939,"results":"28","hashOfConfig":"18"},{"size":1626,"mtime":1612488173193,"results":"29","hashOfConfig":"18"},{"size":2749,"mtime":1612655112849,"results":"30","hashOfConfig":"18"},{"size":3832,"mtime":1612654088782,"results":"31","hashOfConfig":"18"},{"size":4953,"mtime":1612667900214,"results":"32","hashOfConfig":"18"},{"size":618,"mtime":1612655491618,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"v3c2y3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["72","73"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["74"],"import React, { useState, useContext } from 'react';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n    const { logout, isAdmin } = useContext(UserProfileContext);\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n\r\n                <h1 className=\"home\">Welcome {user.name.split(\" \")[0]}!</h1>\r\n                <p className=\"home2\">Click on a  <strong className=\"tag\">Board</strong> to view tasks</p>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",["75"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BoardList = ({ boards }) => {\r\n\r\n    //mapping through the list of boards\r\n    return (\r\n        <div>\r\n            {boards.map((board) => (\r\n                <div key={board.id} >\r\n                    <Link to={`/board/${board.id}`}>\r\n                        <strong>{board.name}</strong>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default BoardList ","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],["76","77"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["78"],"import { useEffect, useState, useContext } from \"react\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col } from 'reactstrap';\r\nimport \"./Board.css\";\r\nimport TaskList from \"../Task/TaskList\";\r\n\r\n\r\n\r\n\r\nconst Board = (props) => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    //setting the state of board and then updating the state of board\r\n    const [board, setBoard] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n\r\n\r\n    //getting the board by id \r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => { setBoard(board) });\r\n\r\n    });\r\n\r\n\r\n    //taking user to the edit form   \r\n    const goToBoardEditForm = () => {\r\n        history.push(`/BoardEditForm/${boardId}`);\r\n    }\r\n\r\n\r\n    //getting the all the tasks for the board the user is on \r\n    //1. get the list of tasks\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}/task`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((tasks) =>\r\n\r\n                setTasks(tasks));\r\n\r\n    }, []);\r\n    if (!tasks) {\r\n        return null;\r\n    }\r\n\r\n\r\n    //2. mounting the taskList component then passing task into that component next  go to taskList \r\n    return (\r\n        <div>\r\n            <h3 className=\"BoardName\">{board.name} Board</h3>\r\n\r\n            <UncontrolledDropdown>\r\n                <DropdownToggle caret>\r\n                    Actions\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    <DropdownItem onClick={goToBoardEditForm}>Edit {board.name} Board</DropdownItem>\r\n                    <DropdownItem divider />\r\n                    <DropdownItem>Delete {board.name} Board</DropdownItem>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Col className=\"listOfTasks\">\r\n                <TaskList tasks={tasks} />\r\n            </Col>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Board","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["79"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst BoardEditForm = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    //this is a empty string but when the page initially gets loaded then the string will be updated with the current name of the board\r\n    const [boardToEdit, setBoardToEdit] = useState(\"\")\r\n    //this the existing board object that is gets loads ar initial load too.\r\n    const [existingBoard, setExistingBoard] = useState({})\r\n\r\n    //this is getting the current state of the board base off the id passed in the uri and setting existingBoard and boardToEdit\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => {\r\n                setExistingBoard(board)\r\n                setBoardToEdit(board[\"name\"])\r\n            });\r\n\r\n    }, []);\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleSubmit = (evt) => {\r\n        const newBoard = evt.target.value;\r\n        setBoardToEdit(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const updateBoard = (board) => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        //keeping all the existing keys the same except name\r\n                        \"active\": existingBoard[\"active\"],\r\n                        \"id\": existingBoard[\"id\"],\r\n                        \"name\": boardToEdit,\r\n                        \"userProfile\": existingBoard[\"userProfile\"],\r\n                        \"userProfileId\": existingBoard[\"userProfileId\"]\r\n                    }),\r\n                })\r\n            )\r\n            .then((evt) => history.push(\"/\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={boardToEdit}\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleSubmit(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            updateBoard(boardToEdit);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["80","81","82","83","84","85"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":31,"column":8,"nodeType":"92","endLine":31,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"86","replacedBy":"98"},{"ruleId":"88","replacedBy":"99"},{"ruleId":"90","severity":1,"message":"100","line":63,"column":8,"nodeType":"92","endLine":63,"endColumn":10,"suggestions":"101"},{"ruleId":"90","severity":1,"message":"100","line":42,"column":8,"nodeType":"92","endLine":42,"endColumn":10,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"103","line":4,"column":18,"nodeType":"96","messageId":"97","endLine":4,"endColumn":21},{"ruleId":"94","severity":1,"message":"104","line":4,"column":36,"nodeType":"96","messageId":"97","endLine":4,"endColumn":40},{"ruleId":"94","severity":1,"message":"105","line":10,"column":12,"nodeType":"96","messageId":"97","endLine":10,"endColumn":17},{"ruleId":"94","severity":1,"message":"106","line":10,"column":19,"nodeType":"96","messageId":"97","endLine":10,"endColumn":27},{"ruleId":"94","severity":1,"message":"107","line":21,"column":11,"nodeType":"96","messageId":"97","endLine":21,"endColumn":29},{"ruleId":"90","severity":1,"message":"108","line":49,"column":8,"nodeType":"92","endLine":49,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["110"],["111"],"React Hook useEffect has missing dependencies: 'boardId' and 'getToken'. Either include them or remove the dependency array.",["113"],["114"],"'Col' is defined but never used.","'Form' is defined but never used.","'board' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'onCheckboxBtnClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'taskId'. Either include them or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [getToken]",{"range":"123","text":"124"},"Update the dependencies array to be: [boardId, getToken]",{"range":"125","text":"126"},{"range":"127","text":"126"},"Update the dependencies array to be: [getToken, taskId]",{"range":"128","text":"129"},[905,907],"[getToken]",[1868,1870],"[boardId, getToken]",[1446,1448],[1800,1802],"[getToken, taskId]"]