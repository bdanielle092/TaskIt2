[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"17","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js":"18","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js":"19","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\DeleteTask.js":"20","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskEditForm.js":"21"},{"size":716,"mtime":1612459642743,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":762,"mtime":1615303514161,"results":"25","hashOfConfig":"23"},{"size":2752,"mtime":1615303514183,"results":"26","hashOfConfig":"23"},{"size":3624,"mtime":1614482410135,"results":"27","hashOfConfig":"23"},{"size":1589,"mtime":1614888864532,"results":"28","hashOfConfig":"23"},{"size":2536,"mtime":1614482401009,"results":"29","hashOfConfig":"23"},{"size":3800,"mtime":1612459642757,"results":"30","hashOfConfig":"23"},{"size":1620,"mtime":1615323941954,"results":"31","hashOfConfig":"23"},{"size":3626,"mtime":1615308356040,"results":"32","hashOfConfig":"23"},{"size":3644,"mtime":1615317358302,"results":"33","hashOfConfig":"23"},{"size":2640,"mtime":1615325030021,"results":"34","hashOfConfig":"23"},{"size":3234,"mtime":1615324774011,"results":"35","hashOfConfig":"23"},{"size":4867,"mtime":1615309164239,"results":"36","hashOfConfig":"23"},{"size":2081,"mtime":1615310301820,"results":"37","hashOfConfig":"23"},{"size":2637,"mtime":1615325058874,"results":"38","hashOfConfig":"23"},{"size":2015,"mtime":1615327414254,"results":"39","hashOfConfig":"23"},{"size":4011,"mtime":1615316185439,"results":"40","hashOfConfig":"23"},{"size":5777,"mtime":1615327339557,"results":"41","hashOfConfig":"23"},{"size":1381,"mtime":1614979807305,"results":"42","hashOfConfig":"23"},{"size":7004,"mtime":1615325787564,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"v3c2y3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["90","91"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["92","93","94"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["95","96"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["97"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\n\r\n\r\n//defining the BoardEditFrom method and not passing anything\r\nconst BoardEditForm = () => {\r\n    //bringing in these methods from BoardContext by using useContext\r\n    const { getBoardById, updateBoard, board } = useContext(BoardContext)\r\n\r\n    //editBoard hold on to state of board in this view. The only thing we are changing is the name which is why its an empty string\r\n    //setEditBoard will allow us to update the board\r\n    const [editBoard, setEditBoard] = useState({\r\n        id: board.id,\r\n        name: \"\",\r\n        userProfileId: board.userProfileId,\r\n        active: board.active\r\n\r\n    });\r\n    //UseParams pulls in the id information from applications view \r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    //useEffects will come back to these methods after render\r\n    //so after the render it will come back and get the boardId and setEditBoard\r\n    useEffect(() => {\r\n        getBoardById(boardId)\r\n\r\n    }, [])\r\n\r\n    //sets the board at the start\r\n    useEffect(() => {\r\n        setEditBoard(board)\r\n    }, [board]);\r\n\r\n\r\n    //updating board value. Updates board value on every key stroke for the input field\r\n    const handleFieldChange = (evt) => {\r\n        //making a copy of editBoard and calling newBoard\r\n        const newBoard = { ...editBoard };\r\n        //the newBoard id equal the value\r\n        newBoard[evt.target.id] = evt.target.value;\r\n        //update the newBoard\r\n        setEditBoard(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const editABoard = (event) => {\r\n        //this stops the user from pushing the button multiple times\r\n        event.preventDefault()\r\n        //update method key/value \r\n        updateBoard({\r\n            id: editBoard.id,\r\n            name: editBoard.name,\r\n            userProfileId: editBoard.userProfileId,\r\n            active: editBoard.active\r\n\r\n        })\r\n        //history.push takes the user back to the home page\r\n        history.push(\"/\");\r\n    };\r\n\r\n    //return 1.I have input fields for each property for board but I am only updating the board name. The other inputs are hidden\r\n    //2. submit button with an onclick that passing the editABoard method then submit. \r\n    //3. cancel button that take the user back home. I use the Link to go back home\r\n    //then we export the EditBoardForm so we can use it in other components\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input\r\n                                id={editBoard.id}\r\n                                onChange={handleFieldChange}\r\n                                type=\"hidden\"\r\n                                value={editBoard.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={editBoard.name}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                        <Input\r\n                            id={editBoard.userProfileId}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editBoard.userProfileId}\r\n                        />\r\n                        <Input\r\n                            id={editBoard.active}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editBoard.active}\r\n                        />\r\n                        <FormGroup>\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={editABoard}\r\n\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Link to={`/`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js",["98"],"import React, { useEffect, useContext } from \"react\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\"\r\n\r\n\r\n//defining and exporting the DeleteBoardForm\r\nexport default function DeleteBoard() {\r\n    //bringing in the methods from BoardContext using useContext\r\n    const { board, deleteBoard, getBoardById } = useContext(BoardContext);\r\n    //useParams allow us to get the boardId from ApplicationView\r\n    const { boardId } = useParams();\r\n    //useHistory will allow us to undo/redo and change or navigate to other pages\r\n    //ex. I use history to take the user back home after deleting a board\r\n    const history = useHistory();\r\n\r\n    //useEffect will render then come back and get the boardId\r\n    useEffect(() => {\r\n        getBoardById((boardId))\r\n    }, [])\r\n\r\n    //deleteThisBoard function. We delete the board and push it back home.\r\n    const deleteThisBoard = () => {\r\n        deleteBoard(boardId)\r\n        history.push(\"/\")\r\n    }\r\n\r\n    //return 1. Ask the user if they are user they want to delete\r\n    //2. letting them know this can not be undone\r\n    //3. button to delete the board. onClick that calls the deleteThisBoard function.\r\n    //4. cancel button that takes the user back home. I used the Link to go back home\r\n    //export the DeleteBoard so we can use it in other components\r\n    return (\r\n        <>\r\n            <div className=\"delete-confirm-container\">\r\n                <h3> Are you sure you want to delete {board.name} board ?</h3>\r\n                <h5>This can not be undone and all Tasks on this board will be delete too</h5>\r\n\r\n                <div className=\"row\">\r\n                    <Button\r\n                        color=\"warning \"\r\n                        onClick={deleteThisBoard}>\r\n                        Delete\r\n                        </Button>\r\n                    <Link to={`/`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",["99","100"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["101"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js",["102"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\DeleteTask.js",["103"],"import React, { useEffect, useContext } from \"react\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\"\r\n\r\n\r\n\r\nexport default function DeleteTask() {\r\n    const { task, deleteTask, getTaskById } = useContext(TaskContext);\r\n    const { board } = useContext(BoardContext);\r\n    const { taskId } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getTaskById((taskId))\r\n    }, [])\r\n\r\n    const deleteThisTask = () => {\r\n        deleteTask(taskId)\r\n        history.push(`/board/${board.id}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"delete-confirm-container\">\r\n                <h3> Are you sure you want to delete {task.name} Task ?</h3>\r\n                <h5>This can not be undone and all SubTask on this Task will be delete too</h5>\r\n\r\n                <div className=\"row\">\r\n                    <Button\r\n                        color=\"warning \"\r\n                        onClick={deleteThisTask}>\r\n                        Delete\r\n                        </Button>\r\n                    <Link to={`/board/${board.id}`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskEditForm.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":15,"nodeType":"111","messageId":"112","endLine":4,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":4,"column":20,"nodeType":"111","messageId":"112","endLine":4,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":22,"column":8,"nodeType":"116","endLine":22,"endColumn":10,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":31,"column":8,"nodeType":"116","endLine":31,"endColumn":10,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"120","line":37,"column":8,"nodeType":"116","endLine":37,"endColumn":10,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"118","line":38,"column":8,"nodeType":"116","endLine":38,"endColumn":10,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"118","line":20,"column":8,"nodeType":"116","endLine":20,"endColumn":10,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"118","line":19,"column":8,"nodeType":"116","endLine":19,"endColumn":10,"suggestions":"124"},{"ruleId":"114","severity":1,"message":"125","line":24,"column":8,"nodeType":"116","endLine":24,"endColumn":10,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"125","line":22,"column":8,"nodeType":"116","endLine":22,"endColumn":10,"suggestions":"127"},{"ruleId":"114","severity":1,"message":"128","line":42,"column":8,"nodeType":"116","endLine":42,"endColumn":10,"suggestions":"129"},{"ruleId":"114","severity":1,"message":"125","line":17,"column":8,"nodeType":"116","endLine":17,"endColumn":10,"suggestions":"130"},{"ruleId":"114","severity":1,"message":"125","line":47,"column":8,"nodeType":"116","endLine":47,"endColumn":10,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllBoards'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has missing dependencies: 'boardId' and 'getBoardById'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'boardId' and 'getTasks'. Either include them or remove the dependency array.",["136"],["137"],["138"],["139"],"React Hook useEffect has missing dependencies: 'getTaskById' and 'taskId'. Either include them or remove the dependency array.",["140"],["141"],"React Hook useEffect has a missing dependency: 'createBoardId'. Either include it or remove the dependency array.",["142"],["143"],["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"147","fix":"151"},{"desc":"147","fix":"152"},{"desc":"147","fix":"153"},{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"157","fix":"158"},{"desc":"154","fix":"159"},{"desc":"154","fix":"160"},"Update the dependencies array to be: [getAllBoards]",{"range":"161","text":"162"},"Update the dependencies array to be: [boardId, getBoardById]",{"range":"163","text":"164"},"Update the dependencies array to be: [boardId, getTasks]",{"range":"165","text":"166"},{"range":"167","text":"164"},{"range":"168","text":"164"},{"range":"169","text":"164"},"Update the dependencies array to be: [getTaskById, taskId]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [createBoardId]",{"range":"173","text":"174"},{"range":"175","text":"171"},{"range":"176","text":"171"},[814,816],"[getAllBoards]",[1703,1705],"[boardId, getBoardById]",[1772,1774],"[boardId, getTasks]",[1277,1279],[879,881],[662,664],[730,732],"[getTaskById, taskId]",[843,845],[1526,1528],"[createBoardId]",[583,585],[1628,1630]]