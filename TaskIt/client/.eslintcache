[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js":"17","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskList.js":"18","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTask.js":"19","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskForm.js":"20"},{"size":716,"mtime":1612459642743,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":524,"mtime":1612459642636,"results":"24","hashOfConfig":"22"},{"size":2220,"mtime":1612755662242,"results":"25","hashOfConfig":"22"},{"size":3596,"mtime":1612670335790,"results":"26","hashOfConfig":"22"},{"size":2346,"mtime":1612675085041,"results":"27","hashOfConfig":"22"},{"size":2536,"mtime":1612642676980,"results":"28","hashOfConfig":"22"},{"size":3800,"mtime":1612459642757,"results":"29","hashOfConfig":"22"},{"size":1316,"mtime":1612672391054,"results":"30","hashOfConfig":"22"},{"size":2347,"mtime":1612676855334,"results":"31","hashOfConfig":"22"},{"size":1780,"mtime":1612673307304,"results":"32","hashOfConfig":"22"},{"size":1626,"mtime":1612488173193,"results":"33","hashOfConfig":"22"},{"size":2358,"mtime":1612680551084,"results":"34","hashOfConfig":"22"},{"size":3832,"mtime":1612654088782,"results":"35","hashOfConfig":"22"},{"size":7499,"mtime":1612755187302,"results":"36","hashOfConfig":"22"},{"size":1950,"mtime":1612734900471,"results":"37","hashOfConfig":"22"},{"size":4201,"mtime":1612681247439,"results":"38","hashOfConfig":"22"},{"size":1757,"mtime":1612733873473,"results":"39","hashOfConfig":"22"},{"size":1264,"mtime":1612733880609,"results":"40","hashOfConfig":"22"},{"size":2746,"mtime":1612755450356,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"v3c2y3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["92","93"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",["94"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavItem,\r\n    Button\r\n} from 'reactstrap';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport logo from \"../images/logo2.png\";\r\nimport \"./Header.css\"\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const { logout } = useContext(UserProfileContext);\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const history = useHistory();\r\n    const [newButton, setNewButton] = useState(\"\")\r\n\r\n\r\n\r\n\r\n    //allow the user to logout\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    //taking the user to the board form \r\n    const goToBoardForm = () => {\r\n        history.push(\"/BoardForm\");\r\n    }\r\n\r\n    const showNewButton = () => {\r\n        const pathName = window.location.pathname\r\n        const taskPage = pathName.includes(\"board/\")\r\n\r\n        if (taskPage) {\r\n            setNewButton(\"task\")\r\n        } else {\r\n            setNewButton(\"board\")\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        showNewButton()\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"dark\" dark expand=\"md\">\r\n                <a href=\"/\"><img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"mr-1\"\r\n                />\r\n                </a>\r\n\r\n\r\n\r\n                <Nav className=\"mr-auto logout\" navbar>\r\n                    {user ? (\r\n                        <>\r\n\r\n\r\n                            <NavItem >\r\n                                <Button color=\"warning\" onClick={goToBoardForm} >New {newButton == \"task\" ? \"Task\" : \"Board\"}</Button>{' '}\r\n                            </NavItem>\r\n\r\n                            <NavItem className=\"logoutButton\">\r\n                                <Button color=\"warning\" onClick={logoutAndReturn}>Logout</Button>{' '}\r\n                            </NavItem>\r\n                        </>\r\n                    ) : null}\r\n                </Nav>\r\n\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["95"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col } from \"reactstrap\"\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [boards, setBoards] = useState([])\r\n\r\n\r\n    //getting the all the boards for this user\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((boards) =>\r\n\r\n                setBoards(boards));\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n            < h1 className=\"home\" > Welcome {user.name.split(\" \")[0]} !</h1 >\r\n            <p className=\"home2\">Click on a {\" \"}<strong className=\"tag\">Board</strong>{\" \"}to view tasks</p>\r\n            <Col className=\"listOfBoards\">\r\n                <BoardList boards={boards} />\r\n            </Col>\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",["96"],"import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Row } from 'reactstrap';\r\n\r\nconst BoardList = ({ boards }) => {\r\n    const history = useHistory();\r\n\r\n    //taking user to the edit form   \r\n    const goToBoardEditForm = (boardId) => {\r\n        history.push(`/BoardEditForm/${boardId}`);\r\n    }\r\n\r\n    //mapping through the list of boards\r\n    return (\r\n        <div>\r\n            {boards.map((board) => (\r\n                <div key={board.id} >\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/board/${board.id}`}>\r\n                                <strong>{board.name}</strong>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle caret>\r\n                                    {board.name} Actions\r\n                </DropdownToggle>\r\n                                <DropdownMenu >\r\n                                    <DropdownItem onClick={() => goToBoardEditForm(board.id)} >Edit {board.name} Board</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem>Delete {board.name} Board</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row><br></br></Row>\r\n                </div>\r\n            ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default BoardList ","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],["97","98"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["99","100","101","102","103"],"import { useEffect, useState, useContext } from \"react\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Button } from 'reactstrap';\r\nimport \"./Board.css\";\r\nimport TaskList from \"../Task/TaskList\";\r\n\r\n\r\n\r\n\r\n\r\nconst Board = (props) => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    //setting the state of board and then updating the state of board\r\n    const [board, setBoard] = useState([]);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n\r\n\r\n    //getting the board by id \r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => { setBoard(board) });\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    //getting the all the tasks for the board the user is on \r\n    //1. get the list of tasks\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}/task`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((tasks) =>\r\n\r\n                setTasks(tasks));\r\n\r\n    }, []);\r\n    if (!tasks) {\r\n        return null;\r\n    }\r\n\r\n    //taking the user to the board form \r\n    const goToTaskForm = () => {\r\n        history.push(`/board/${boardId}/TaskForm`);\r\n    }\r\n\r\n\r\n    //2. mounting the taskList component then passing task into that component next  go to taskList \r\n    return (\r\n        <div>\r\n            <h3 className=\"BoardName\">{board.name} Board</h3>\r\n\r\n            <Button onClick={goToTaskForm}>New Task</Button>\r\n\r\n            <Col className=\"listOfTasks\">\r\n                <TaskList tasks={tasks} />\r\n            </Col>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Board","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["104"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst BoardEditForm = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    //this is a empty string but when the page initially gets loaded then the string will be updated with the current name of the board\r\n    const [boardToEdit, setBoardToEdit] = useState(\"\")\r\n    //this the existing board object that is gets loads ar initial load too.\r\n    const [existingBoard, setExistingBoard] = useState({})\r\n\r\n    //this is getting the current state of the board base off the id passed in the uri and setting existingBoard and boardToEdit\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => {\r\n                setExistingBoard(board)\r\n                setBoardToEdit(board[\"name\"])\r\n            });\r\n\r\n    }, []);\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleSubmit = (evt) => {\r\n        const newBoard = evt.target.value;\r\n        setBoardToEdit(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const updateBoard = (board) => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        //keeping all the existing keys the same except name\r\n                        \"active\": existingBoard[\"active\"],\r\n                        \"id\": existingBoard[\"id\"],\r\n                        \"name\": boardToEdit,\r\n                        \"userProfile\": existingBoard[\"userProfile\"],\r\n                        \"userProfileId\": existingBoard[\"userProfileId\"]\r\n                    }),\r\n                })\r\n            )\r\n            .then((evt) => history.push(\"/\"));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={boardToEdit}\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleSubmit(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            updateBoard(boardToEdit);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["105","106","107","108","109","110","111","112","113","114"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js",["115"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\n\r\nconst TaskForm = () => {\r\n    const [task, setTask] = useState({ name: \"\", note: \"\", isComplete: false, dateTime: \"\" })\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    //getting the boardId \r\n    const createBoardId = () => {\r\n        const newTask = task\r\n        newTask[\"boardId\"] = boardId\r\n        setTask(newTask);\r\n    }\r\n\r\n    //useEffect for createBoardId function \r\n    useEffect(() => {\r\n        createBoardId();\r\n    }, [])\r\n\r\n\r\n    //this is updating the task and setting it as the new task\r\n    //if its a priorityId change to a number otherwise return as a string \r\n    const handleSubmit = (evt) => {\r\n        const newTask = { ...task };\r\n        if (evt.target.name === \"priorityId\") {\r\n            newTask[evt.target.name] = Number(evt.target.value);\r\n        } else {\r\n            newTask[evt.target.name] = evt.target.value;\r\n        }\r\n\r\n        setTask(newTask);\r\n    };\r\n\r\n    //this is creating the new task in the database then taking us back to the board we are currently on \r\n    const createNewTask = () => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}/task`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/JSON\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify(task),\r\n                })\r\n            )\r\n            .then(() => history.push(`/board/${boardId}`));\r\n    };\r\n\r\n    //updateTask = task, then setting the date to current day and time, then updating set task to the updated day and time in the database\r\n    const createDate = () => {\r\n        const updateTask = task\r\n        updateTask[\"dateTime\"] = Date.now()\r\n        setTask(updateTask)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Task Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter new task name\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                            <Label for=\"notes\">Notes</Label>\r\n                            <Input\r\n                                id=\"notes\"\r\n                                type=\"text\"\r\n                                name=\"notes\"\r\n                                placeholder=\"Enter notes\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                            <Label for=\"priority\">Choose a Priority</Label>\r\n                            <select onChange={(evt) => handleSubmit(evt)} id=\"priority\" name=\"priorityId\" form=\"priority\">\r\n                                <option value=\"1\">None</option>\r\n                                <option value=\"2\">Low</option>\r\n                                <option value=\"3\">Medium</option>\r\n                                <option value=\"4\">High</option>\r\n                            </select>\r\n\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            createDate();\r\n                            createNewTask();\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\nexport default TaskForm;\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskList.js",["116","117"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Row } from 'reactstrap';\r\n\r\n\r\n\r\nconst SubTaskList = ({ subTasks }) => {\r\n    const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n    //3.mapping through the list of subTasks which will be displayed on the task\r\n    //4. link goes subTask.js to get the subTask by id which display one subTask info\r\n    return (\r\n        <div>\r\n            {subTasks.map((subTask) => (\r\n                <div key={subTask.id} >\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/subTask/${subTask.id}`}>\r\n                                <strong>{subTask.name}</strong>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle caret>\r\n                                    {subTask.name} Actions\r\n                </DropdownToggle>\r\n                                <DropdownMenu >\r\n                                    <DropdownItem >Edit {subTask.name} SubTask</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem>Delete {subTask.name} SubTask</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row><br></br></Row>\r\n                </div>\r\n            ))\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\nexport default SubTaskList","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTask.js",["118","119","120","121","122","123","124","125"],"import { useEffect, useState, useContext } from \"react\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Button } from 'reactstrap';\r\n\r\n\r\n\r\nconst SubTask = (props) => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { subTaskId } = useParams();\r\n    const [subTask, setSubTask] = useState(\"\")\r\n\r\n    //5.getting the subTask by id and returning the info in the return section \r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n\r\n                fetch(`/api/subTask/${subTaskId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((subTask) => {\r\n                setSubTask(subTask)\r\n\r\n            });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    //2. mounting the subTaskList component then passing subTask into that component next go to subTaskList \r\n    return (\r\n        <div>\r\n            <h3>{subTask.name}</h3>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SubTask","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskForm.js",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":77,"column":97,"nodeType":"133","messageId":"134","endLine":77,"endColumn":99},{"ruleId":"135","severity":1,"message":"136","line":31,"column":8,"nodeType":"137","endLine":31,"endColumn":10,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"139","severity":1,"message":"145","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":22},{"ruleId":"139","severity":1,"message":"146","line":4,"column":24,"nodeType":"141","messageId":"142","endLine":4,"endColumn":36},{"ruleId":"139","severity":1,"message":"147","line":4,"column":38,"nodeType":"141","messageId":"142","endLine":4,"endColumn":52},{"ruleId":"139","severity":1,"message":"148","line":4,"column":54,"nodeType":"141","messageId":"142","endLine":4,"endColumn":74},{"ruleId":"135","severity":1,"message":"149","line":61,"column":8,"nodeType":"137","endLine":61,"endColumn":10,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"149","line":42,"column":8,"nodeType":"137","endLine":42,"endColumn":10,"suggestions":"151"},{"ruleId":"139","severity":1,"message":"152","line":4,"column":36,"nodeType":"141","messageId":"142","endLine":4,"endColumn":40},{"ruleId":"139","severity":1,"message":"153","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":15},{"ruleId":"139","severity":1,"message":"154","line":12,"column":12,"nodeType":"141","messageId":"142","endLine":12,"endColumn":17},{"ruleId":"139","severity":1,"message":"155","line":12,"column":19,"nodeType":"141","messageId":"142","endLine":12,"endColumn":27},{"ruleId":"139","severity":1,"message":"156","line":23,"column":13,"nodeType":"141","messageId":"142","endLine":23,"endColumn":20},{"ruleId":"139","severity":1,"message":"157","line":23,"column":22,"nodeType":"141","messageId":"142","endLine":23,"endColumn":32},{"ruleId":"139","severity":1,"message":"158","line":26,"column":11,"nodeType":"141","messageId":"142","endLine":26,"endColumn":29},{"ruleId":"135","severity":1,"message":"159","line":56,"column":8,"nodeType":"137","endLine":56,"endColumn":10,"suggestions":"160"},{"ruleId":"139","severity":1,"message":"161","line":101,"column":11,"nodeType":"141","messageId":"142","endLine":101,"endColumn":21},{"ruleId":"135","severity":1,"message":"159","line":140,"column":8,"nodeType":"137","endLine":140,"endColumn":10,"suggestions":"162"},{"ruleId":"135","severity":1,"message":"163","line":30,"column":8,"nodeType":"137","endLine":30,"endColumn":10,"suggestions":"164"},{"ruleId":"139","severity":1,"message":"165","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"166","line":8,"column":11,"nodeType":"141","messageId":"142","endLine":8,"endColumn":18},{"ruleId":"139","severity":1,"message":"167","line":3,"column":21,"nodeType":"141","messageId":"142","endLine":3,"endColumn":31},{"ruleId":"139","severity":1,"message":"145","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":22},{"ruleId":"139","severity":1,"message":"146","line":4,"column":24,"nodeType":"141","messageId":"142","endLine":4,"endColumn":36},{"ruleId":"139","severity":1,"message":"147","line":4,"column":38,"nodeType":"141","messageId":"142","endLine":4,"endColumn":52},{"ruleId":"139","severity":1,"message":"148","line":4,"column":54,"nodeType":"141","messageId":"142","endLine":4,"endColumn":74},{"ruleId":"139","severity":1,"message":"168","line":4,"column":76,"nodeType":"141","messageId":"142","endLine":4,"endColumn":79},{"ruleId":"139","severity":1,"message":"169","line":4,"column":81,"nodeType":"141","messageId":"142","endLine":4,"endColumn":87},{"ruleId":"135","severity":1,"message":"170","line":31,"column":8,"nodeType":"137","endLine":31,"endColumn":10,"suggestions":"171"},{"ruleId":"135","severity":1,"message":"172","line":33,"column":8,"nodeType":"137","endLine":33,"endColumn":10,"suggestions":"173"},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["176"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["174"],["175"],"'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","React Hook useEffect has missing dependencies: 'boardId' and 'getToken'. Either include them or remove the dependency array.",["177"],["178"],"'Form' is defined but never used.","'SubTask' is defined but never used.","'board' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'subTask' is assigned a value but never used.","'setSubTask' is assigned a value but never used.","'onCheckboxBtnClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'taskId'. Either include them or remove the dependency array.",["179"],"'deleteTask' is assigned a value but never used.",["180"],"React Hook useEffect has a missing dependency: 'createBoardId'. Either include it or remove the dependency array.",["181"],"'useState' is defined but never used.","'history' is assigned a value but never used.","'useHistory' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'subTaskId'. Either include them or remove the dependency array.",["182"],"React Hook useEffect has a missing dependency: 'createTaskId'. Either include it or remove the dependency array.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [getToken]",{"range":"198","text":"199"},"Update the dependencies array to be: [boardId, getToken]",{"range":"200","text":"201"},{"range":"202","text":"201"},"Update the dependencies array to be: [getToken, taskId]",{"range":"203","text":"204"},{"range":"205","text":"204"},"Update the dependencies array to be: [createBoardId]",{"range":"206","text":"207"},"Update the dependencies array to be: [getToken, subTaskId]",{"range":"208","text":"209"},"Update the dependencies array to be: [createTaskId]",{"range":"210","text":"211"},[905,907],"[getToken]",[1743,1745],"[boardId, getToken]",[1446,1448],[2118,2120],"[getToken, taskId]",[4889,4891],[845,847],"[createBoardId]",[1020,1022],"[getToken, subTaskId]",[853,855],"[createTaskId]"]