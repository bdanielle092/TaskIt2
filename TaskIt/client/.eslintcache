[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js":"17","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskList.js":"18","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTask.js":"19","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskForm.js":"20","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js":"21"},{"size":716,"mtime":1612459642743,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":639,"mtime":1612817844645,"results":"25","hashOfConfig":"23"},{"size":2220,"mtime":1612801449105,"results":"26","hashOfConfig":"23"},{"size":3596,"mtime":1612670335790,"results":"27","hashOfConfig":"23"},{"size":1881,"mtime":1612795738461,"results":"28","hashOfConfig":"23"},{"size":2536,"mtime":1612642676980,"results":"29","hashOfConfig":"23"},{"size":3800,"mtime":1612459642757,"results":"30","hashOfConfig":"23"},{"size":1316,"mtime":1612672391054,"results":"31","hashOfConfig":"23"},{"size":2592,"mtime":1612798901732,"results":"32","hashOfConfig":"23"},{"size":1782,"mtime":1612803137841,"results":"33","hashOfConfig":"23"},{"size":1626,"mtime":1612488173193,"results":"34","hashOfConfig":"23"},{"size":2194,"mtime":1612820098853,"results":"35","hashOfConfig":"23"},{"size":4077,"mtime":1612798932769,"results":"36","hashOfConfig":"23"},{"size":8487,"mtime":1612822942867,"results":"37","hashOfConfig":"23"},{"size":1950,"mtime":1612734900471,"results":"38","hashOfConfig":"23"},{"size":4475,"mtime":1612807139290,"results":"39","hashOfConfig":"23"},{"size":1783,"mtime":1612799690954,"results":"40","hashOfConfig":"23"},{"size":1582,"mtime":1612799566183,"results":"41","hashOfConfig":"23"},{"size":3077,"mtime":1612801814293,"results":"42","hashOfConfig":"23"},{"size":1393,"mtime":1612819029685,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"v3c2y3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["96","97"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",["98","99","100","101"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavItem,\r\n    Button\r\n} from 'reactstrap';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport logo from \"../images/logo2.png\";\r\nimport \"./Header.css\"\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const { logout } = useContext(UserProfileContext);\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const history = useHistory();\r\n    const [newButton, setNewButton] = useState(\"\")\r\n\r\n\r\n\r\n\r\n    //allow the user to logout\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark(\"You are now logged out\");\r\n            history.push(\"/login\");\r\n        });\r\n    };\r\n\r\n    //taking the user to the board form \r\n    const goToBoardForm = () => {\r\n        history.push(\"/BoardForm\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"dark\" dark expand=\"md\">\r\n                <a href=\"/\"><img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"mr-1\"\r\n                />\r\n                </a>\r\n\r\n\r\n\r\n                <Nav className=\"mr-auto logout\" navbar>\r\n\r\n                    <>\r\n\r\n\r\n                        <NavItem >\r\n                            <Button color=\"warning\" onClick={goToBoardForm} >New Board</Button>{' '}\r\n                        </NavItem>\r\n\r\n                        <NavItem className=\"logoutButton\">\r\n                            <Button color=\"warning\" onClick={logoutAndReturn}>Logout</Button>{' '}\r\n                        </NavItem>\r\n                    </>\r\n\r\n                </Nav>\r\n\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["102"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col } from \"reactstrap\"\r\nimport \"./Home.css\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [boards, setBoards] = useState([])\r\n\r\n\r\n    //getting the all the boards for this user\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((boards) =>\r\n\r\n                setBoards(boards));\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <div>\r\n\r\n            < h1 className=\"home\" > Welcome {user.name.split(\" \")[0]} !</h1 >\r\n            <p className=\"home2\">Click on a {\" \"}<strong className=\"tag\">Board</strong>{\" \"}to view tasks</p>\r\n            <Col className=\"listOfBoards\">\r\n                <BoardList boards={boards} />\r\n            </Col>\r\n        </div >\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",["103"],"import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Row } from 'reactstrap';\r\n\r\nconst BoardList = ({ boards }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    //taking user to the edit form   \r\n    const goToBoardEditForm = (boardId) => {\r\n        history.push(`/BoardEditForm/${boardId}`);\r\n    }\r\n\r\n    //mapping through the list of boards\r\n    return (\r\n        <div>\r\n            {boards.map((board) => (\r\n                <div key={board.id} >\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/board/${board.id}`}>\r\n                                <strong>{board.name}</strong>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle caret>\r\n                                    {board.name} Actions\r\n                </DropdownToggle>\r\n                                <DropdownMenu >\r\n                                    <DropdownItem onClick={() => goToBoardEditForm(board.id)} >Edit {board.name} Board</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem>Delete {board.name} Board</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row><br></br></Row>\r\n                </div>\r\n            ))\r\n            }\r\n        </div >\r\n    )\r\n}\r\nexport default BoardList ","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],["104","105"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["106","107","108","109","110","111","112"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["113"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst BoardEditForm = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    //this is a empty string but when the page initially gets loaded then the string will be updated with the current name of the board\r\n    const [boardToEdit, setBoardToEdit] = useState(\"\")\r\n    //this the existing board object that is gets loads ar initial load too.\r\n    const [existingBoard, setExistingBoard] = useState({})\r\n\r\n    //this is getting the current state of the board base off the id passed in the uri and setting existingBoard and boardToEdit\r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((board) => {\r\n                setExistingBoard(board)\r\n                setBoardToEdit(board[\"name\"])\r\n            });\r\n\r\n    }, []);\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleSubmit = (evt) => {\r\n        const newBoard = evt.target.value;\r\n        setBoardToEdit(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const updateBoard = (board) => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}`, {\r\n                    method: \"PUT\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        //keeping all the existing keys the same except name\r\n                        \"active\": existingBoard[\"active\"],\r\n                        \"id\": existingBoard[\"id\"],\r\n                        \"name\": boardToEdit,\r\n                        \"userProfile\": existingBoard[\"userProfile\"],\r\n                        \"userProfileId\": existingBoard[\"userProfileId\"]\r\n                    }),\r\n                })\r\n            )\r\n            .then((evt) => history.push(\"/\"));\r\n    };\r\n\r\n\r\n    //taking the user back to the home page\r\n    const goBackHome = () => {\r\n        history.push(`/`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={boardToEdit}\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleSubmit(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            updateBoard(boardToEdit);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Button outline color=\"info\" onClick={goBackHome}>\r\n                        Cancel\r\n              </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["114","115","116","117","118","119","120","121","122","123","124"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js",["125"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\n\r\nconst TaskForm = () => {\r\n    const [task, setTask] = useState({ name: \"\", note: \"\", isComplete: false, dateTime: \"\" })\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    //getting the boardId \r\n    const createBoardId = () => {\r\n        const newTask = task\r\n        newTask[\"boardId\"] = boardId\r\n        setTask(newTask);\r\n    }\r\n\r\n    //useEffect for createBoardId function \r\n    useEffect(() => {\r\n        createBoardId();\r\n    }, [])\r\n\r\n\r\n    //this is updating the task and setting it as the new task\r\n    //if its a priorityId change to a number otherwise return as a string \r\n    const handleSubmit = (evt) => {\r\n        const newTask = { ...task };\r\n        if (evt.target.name === \"priorityId\") {\r\n            newTask[evt.target.name] = Number(evt.target.value);\r\n        } else {\r\n            newTask[evt.target.name] = evt.target.value;\r\n        }\r\n\r\n        setTask(newTask);\r\n    };\r\n\r\n    //this is creating the new task in the database then taking us back to the board we are currently on \r\n    const createNewTask = () => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/board/${boardId}/task`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/JSON\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify(task),\r\n                })\r\n            )\r\n            .then(() => history.push(`/board/${boardId}`));\r\n    };\r\n\r\n    //updateTask = task, then setting the date to current day and time, then updating set task to the updated day and time in the database\r\n    const createDate = () => {\r\n        const updateTask = task\r\n        updateTask[\"dateTime\"] = Date.now()\r\n        setTask(updateTask)\r\n    }\r\n\r\n    //taking the user back to the board they are on \r\n    const goBackToBoard = () => {\r\n        history.push(`/board/${boardId}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Task Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter new task name\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                            <Label for=\"notes\">Notes</Label>\r\n                            <Input\r\n                                id=\"notes\"\r\n                                type=\"text\"\r\n                                name=\"notes\"\r\n                                placeholder=\"Enter notes\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                            <Label for=\"priority\">Choose a Priority</Label>\r\n                            <select onChange={(evt) => handleSubmit(evt)} id=\"priority\" name=\"priorityId\" form=\"priority\">\r\n                                <option value=\"1\">None</option>\r\n                                <option value=\"2\">Low</option>\r\n                                <option value=\"3\">Medium</option>\r\n                                <option value=\"4\">High</option>\r\n                            </select>\r\n\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            createDate();\r\n                            createNewTask();\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Button outline color=\"info\" onClick={goBackToBoard}>\r\n                        Cancel\r\n              </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\nexport default TaskForm;\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskList.js",["126","127"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Row } from 'reactstrap';\r\n\r\n\r\n\r\nconst SubTaskList = ({ subTasks }) => {\r\n    const history = useHistory();\r\n\r\n\r\n\r\n\r\n\r\n    //3.mapping through the list of subTasks which will be displayed on the task\r\n    //4. link goes subTask.js to get the subTask by id which display one subTask info\r\n    return (\r\n        <div>\r\n            {subTasks.map((subTask) => (\r\n                <div key={subTask.id} >\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/board/:boardId/task/:taskId /SubTask/:subTaskId`}>\r\n                                <strong>{subTask.name}</strong>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col></Col>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <UncontrolledDropdown>\r\n                                <DropdownToggle caret>\r\n                                    {subTask.name} Actions\r\n                </DropdownToggle>\r\n                                <DropdownMenu >\r\n                                    <DropdownItem >Edit {subTask.name} SubTask</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem>Delete {subTask.name} SubTask</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row><br></br></Row>\r\n                </div>\r\n            ))\r\n            }\r\n        </div >\r\n    )\r\n\r\n}\r\nexport default SubTaskList","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTask.js",["128","129","130","131","132","133"],"import { useEffect, useState, useContext } from \"react\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Col, Button } from 'reactstrap';\r\n\r\n\r\n\r\nconst SubTask = (props) => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { subTaskId, taskId, boardId } = useParams();\r\n    const [subTask, setSubTask] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    //5.getting the subTask by id and returning the info in the return section \r\n    useEffect(() => {\r\n        getToken()\r\n            .then((token) =>\r\n\r\n                fetch(`/api/subTask/${subTaskId}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            )\r\n            .then((res) => res.json())\r\n            .then((subTask) => {\r\n                setSubTask(subTask)\r\n\r\n            });\r\n\r\n    }, []);\r\n\r\n    //taking the user back to the task they are on \r\n    const goBackToTask = () => {\r\n        history.push(`/board/${boardId}/task/${taskId}`);\r\n    }\r\n\r\n\r\n    //2. mounting the subTaskList component then passing subTask into that component next go to subTaskList \r\n    return (\r\n        <div>\r\n            <h3>{subTask.name}</h3>\r\n            <Button outline color=\"info\" onClick={goBackToTask}>\r\n                Cancel\r\n              </Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SubTask","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskForm.js",["134"],"\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\n\r\n\r\nconst SubTaskForm = () => {\r\n    const [subTask, setSubTask] = useState({ name: \"\", isComplete: false });\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { taskId, boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    //getting the taskId\r\n    const createTaskId = () => {\r\n        const newSubTask = subTask\r\n        newSubTask[\"taskId\"] = taskId\r\n        newSubTask[\"boardId\"] = boardId\r\n        setSubTask(newSubTask);\r\n\r\n    }\r\n\r\n    //useEffect for createTaskId function \r\n    useEffect(() => {\r\n        createTaskId();\r\n    }, [])\r\n\r\n    //updating the subTask and setting the new subTask\r\n    const handleSubmit = (evt) => {\r\n        const newSubTask = { ...subTask };\r\n        newSubTask[evt.target.name] = evt.target.value;\r\n        setSubTask(newSubTask)\r\n    }\r\n\r\n    //making a new subTask and saving it to the database\r\n    const createNewSubTask = () => {\r\n        getToken()\r\n            .then((token) =>\r\n                fetch(`/api/subTask/task/${taskId}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/JSON\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                    body: JSON.stringify(subTask),\r\n                })\r\n            )\r\n            .then(() => history.push(`/board/${boardId}/task/${taskId}`));\r\n\r\n    };\r\n\r\n\r\n    //taking the user back to the task they are on \r\n    const goBackToTask = () => {\r\n        history.push(`/board/${boardId}/task/${taskId}`);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">SubTask Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter a subTask\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            createNewSubTask(subTask);\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                </Button>\r\n                    <Button outline color=\"info\" onClick={goBackToTask}>\r\n                        Cancel\r\n              </Button>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\nexport default SubTaskForm;         ","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js",["135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":29,"nodeType":"142","messageId":"143","endLine":1,"endColumn":38},{"ruleId":"140","severity":1,"message":"144","line":18,"column":11,"nodeType":"142","messageId":"143","endLine":18,"endColumn":15},{"ruleId":"140","severity":1,"message":"145","line":20,"column":12,"nodeType":"142","messageId":"143","endLine":20,"endColumn":21},{"ruleId":"140","severity":1,"message":"146","line":20,"column":23,"nodeType":"142","messageId":"143","endLine":20,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":31,"column":8,"nodeType":"149","endLine":31,"endColumn":10,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"136","replacedBy":"151"},{"ruleId":"138","replacedBy":"152"},{"ruleId":"140","severity":1,"message":"153","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":22},{"ruleId":"140","severity":1,"message":"154","line":4,"column":24,"nodeType":"142","messageId":"143","endLine":4,"endColumn":36},{"ruleId":"140","severity":1,"message":"155","line":4,"column":38,"nodeType":"142","messageId":"143","endLine":4,"endColumn":52},{"ruleId":"140","severity":1,"message":"156","line":4,"column":54,"nodeType":"142","messageId":"143","endLine":4,"endColumn":74},{"ruleId":"140","severity":1,"message":"157","line":7,"column":23,"nodeType":"142","messageId":"143","endLine":7,"endColumn":35},{"ruleId":"147","severity":1,"message":"158","line":39,"column":8,"nodeType":"149","endLine":39,"endColumn":10,"suggestions":"159"},{"ruleId":"147","severity":1,"message":"160","line":46,"column":8,"nodeType":"149","endLine":46,"endColumn":10,"suggestions":"161"},{"ruleId":"147","severity":1,"message":"158","line":42,"column":8,"nodeType":"149","endLine":42,"endColumn":10,"suggestions":"162"},{"ruleId":"140","severity":1,"message":"163","line":4,"column":36,"nodeType":"142","messageId":"143","endLine":4,"endColumn":40},{"ruleId":"140","severity":1,"message":"164","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":15},{"ruleId":"140","severity":1,"message":"165","line":11,"column":23,"nodeType":"142","messageId":"143","endLine":11,"endColumn":28},{"ruleId":"140","severity":1,"message":"166","line":14,"column":12,"nodeType":"142","messageId":"143","endLine":14,"endColumn":17},{"ruleId":"140","severity":1,"message":"167","line":14,"column":19,"nodeType":"142","messageId":"143","endLine":14,"endColumn":27},{"ruleId":"140","severity":1,"message":"168","line":26,"column":13,"nodeType":"142","messageId":"143","endLine":26,"endColumn":20},{"ruleId":"140","severity":1,"message":"169","line":26,"column":22,"nodeType":"142","messageId":"143","endLine":26,"endColumn":32},{"ruleId":"140","severity":1,"message":"170","line":32,"column":11,"nodeType":"142","messageId":"143","endLine":32,"endColumn":29},{"ruleId":"147","severity":1,"message":"171","line":62,"column":8,"nodeType":"149","endLine":62,"endColumn":10,"suggestions":"172"},{"ruleId":"147","severity":1,"message":"160","line":108,"column":8,"nodeType":"149","endLine":108,"endColumn":10,"suggestions":"173"},{"ruleId":"147","severity":1,"message":"171","line":155,"column":8,"nodeType":"149","endLine":155,"endColumn":10,"suggestions":"174"},{"ruleId":"147","severity":1,"message":"175","line":30,"column":8,"nodeType":"149","endLine":30,"endColumn":10,"suggestions":"176"},{"ruleId":"140","severity":1,"message":"177","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"178","line":8,"column":11,"nodeType":"142","messageId":"143","endLine":8,"endColumn":18},{"ruleId":"140","severity":1,"message":"153","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":22},{"ruleId":"140","severity":1,"message":"154","line":4,"column":24,"nodeType":"142","messageId":"143","endLine":4,"endColumn":36},{"ruleId":"140","severity":1,"message":"155","line":4,"column":38,"nodeType":"142","messageId":"143","endLine":4,"endColumn":52},{"ruleId":"140","severity":1,"message":"156","line":4,"column":54,"nodeType":"142","messageId":"143","endLine":4,"endColumn":74},{"ruleId":"140","severity":1,"message":"179","line":4,"column":76,"nodeType":"142","messageId":"143","endLine":4,"endColumn":79},{"ruleId":"147","severity":1,"message":"180","line":32,"column":8,"nodeType":"149","endLine":32,"endColumn":10,"suggestions":"181"},{"ruleId":"147","severity":1,"message":"182","line":34,"column":8,"nodeType":"149","endLine":34,"endColumn":10,"suggestions":"183"},{"ruleId":"140","severity":1,"message":"184","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":19},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'newButton' is assigned a value but never used.","'setNewButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["187"],["185"],["186"],"'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'TaskProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'boardId' and 'getToken'. Either include them or remove the dependency array.",["188"],"React Hook useEffect has missing dependencies: 'boardId' and 'getTasks'. Either include them or remove the dependency array.",["189"],["190"],"'Form' is defined but never used.","'SubTask' is defined but never used.","'tasks' is assigned a value but never used.","'board' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'subTask' is assigned a value but never used.","'setSubTask' is assigned a value but never used.","'onCheckboxBtnClick' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'taskId'. Either include them or remove the dependency array.",["191"],["192"],["193"],"React Hook useEffect has a missing dependency: 'createBoardId'. Either include it or remove the dependency array.",["194"],"'useState' is defined but never used.","'history' is assigned a value but never used.","'Col' is defined but never used.","React Hook useEffect has missing dependencies: 'getToken' and 'subTaskId'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'createTaskId'. Either include it or remove the dependency array.",["196"],"'useParams' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"199","fix":"203"},{"desc":"204","fix":"205"},{"desc":"201","fix":"206"},{"desc":"204","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [getToken]",{"range":"214","text":"215"},"Update the dependencies array to be: [boardId, getToken]",{"range":"216","text":"217"},"Update the dependencies array to be: [boardId, getTasks]",{"range":"218","text":"219"},{"range":"220","text":"217"},"Update the dependencies array to be: [getToken, taskId]",{"range":"221","text":"222"},{"range":"223","text":"219"},{"range":"224","text":"222"},"Update the dependencies array to be: [createBoardId]",{"range":"225","text":"226"},"Update the dependencies array to be: [getToken, subTaskId]",{"range":"227","text":"228"},"Update the dependencies array to be: [createTaskId]",{"range":"229","text":"230"},[905,907],"[getToken]",[1235,1237],"[boardId, getToken]",[1398,1400],"[boardId, getTasks]",[1446,1448],[2396,2398],"[getToken, taskId]",[3963,3965],[5212,5214],[845,847],"[createBoardId]",[1072,1074],"[getToken, subTaskId]",[894,896],"[createTaskId]"]