[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js":"15"},{"size":716,"mtime":1612459642743,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":643,"mtime":1614482410112,"results":"19","hashOfConfig":"17"},{"size":1756,"mtime":1614715375713,"results":"20","hashOfConfig":"17"},{"size":3624,"mtime":1614482410135,"results":"21","hashOfConfig":"17"},{"size":1589,"mtime":1614645586066,"results":"22","hashOfConfig":"17"},{"size":2536,"mtime":1614482401009,"results":"23","hashOfConfig":"17"},{"size":3800,"mtime":1612459642757,"results":"24","hashOfConfig":"17"},{"size":1649,"mtime":1614703468758,"results":"25","hashOfConfig":"17"},{"size":2690,"mtime":1614703346368,"results":"26","hashOfConfig":"17"},{"size":3364,"mtime":1614716452152,"results":"27","hashOfConfig":"17"},{"size":1363,"mtime":1614782589238,"results":"28","hashOfConfig":"17"},{"size":1031,"mtime":1614723332766,"results":"29","hashOfConfig":"17"},{"size":3830,"mtime":1614718624548,"results":"30","hashOfConfig":"17"},{"size":1250,"mtime":1614722516033,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"v3c2y3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["67","68"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["69"],"import React, { useContext, useEffect } from 'react';\r\nimport { BoardContext } from '../providers/BoardProvider';\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col } from \"reactstrap\"\r\nimport \"./Home.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getAllBoards, boards } = useContext(BoardContext);\r\n    const history = useHistory();\r\n\r\n\r\n    //useEffect is automatically invoked and since the dependency array is empty, it only runs the first time the component renders.You can include dependencies in the array to cause the useEffect to run additional times.\r\n    useEffect(() => {\r\n\r\n        getAllBoards();\r\n\r\n    }, [])\r\n\r\n\r\n    //taking the user to the board form \r\n    const goToBoardForm = () => {\r\n        history.push(\"/BoardForm\");\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <div className='icons'>\r\n                    <AiOutlinePlusCircle\r\n                        size=\"2em\"\r\n                        color=\"#2A9d8F\"\r\n                        onClick={goToBoardForm}\r\n                        className='plus-icon' />\r\n                </div>\r\n\r\n                <h1 className=\"home\">Welcome {user.name.split(\" \")[0]}!</h1>\r\n                <p className=\"home2\">Click on a  <strong className=\"tag\">Board</strong> to view tasks</p>\r\n                <Col className=\"listOfBoards\">\r\n                    <BoardList boards={boards} />\r\n                </Col>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["70"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Card, CardBody } from \"reactstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TiArrowBack } from \"react-icons/ti\"\r\n\r\n\r\nconst Board = ({ props }) => {\r\n    const { getBoardById, board } = useContext(BoardContext)\r\n    const { boardId } = useParams();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getBoardById(boardId)\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <div className='icons'>\r\n                    <Link to={\"/\"}>\r\n                        <TiArrowBack\r\n                            size=\"2em\"\r\n                            color=\"#2A9d8F\"\r\n                            boardId={board}\r\n                            className='back-icon' />\r\n                    </Link>\r\n                </div>\r\n                <h3 className=\"BoardName\">{board.name} Board</h3>\r\n\r\n            </CardBody>\r\n        </Card>\r\n\r\n\r\n    )\r\n}\r\nexport default Board","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["71"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\n\r\n\r\n\r\nconst BoardEditForm = () => {\r\n    const { getBoardById, updateBoard, board } = useContext(BoardContext)\r\n\r\n    //for edit, hold on to state of board in this view\r\n    const [editBoard, setEditBoard] = useState({\r\n        id: board.id,\r\n        name: \"\",\r\n        userProfileId: board.userProfileId,\r\n        active: board.active\r\n\r\n    });\r\n    //UseParams pulls in the id information from applications view \r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n    // console.log(parseInt(id).toString())\r\n\r\n    useEffect(() => {\r\n        getBoardById(boardId)\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    //sets the board at the start\r\n    useEffect(() => {\r\n        setEditBoard(board)\r\n    }, [board]);\r\n\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleFieldChange = (evt) => {\r\n        const newBoard = { ...editBoard };\r\n        newBoard[evt.target.id] = evt.target.value;\r\n        setEditBoard(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const editABoard = (event) => {\r\n        event.preventDefault()\r\n        updateBoard({\r\n            id: editBoard.id,\r\n            name: editBoard.name,\r\n            userProfileId: editBoard.userProfileId,\r\n            active: editBoard.active\r\n\r\n        })\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input\r\n                                id={editBoard.id}\r\n                                onChange={handleFieldChange}\r\n                                type=\"hidden\"\r\n                                value={board.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                defaultValue={board.name}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                        <Input\r\n                            id={editBoard.userProfileId}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={board.userProfileId}\r\n                        />\r\n                        <Input\r\n                            id={editBoard.active}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={board.active}\r\n                        />\r\n                        <FormGroup>\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={editABoard}\r\n\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Link to={`/`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js",["72"],"import React, { useEffect, useContext } from \"react\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\"\r\n\r\n\r\n\r\nexport default function DeleteBoard() {\r\n    const { board, deleteBoard, getBoardById } = useContext(BoardContext);\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getBoardById((boardId))\r\n    }, [])\r\n\r\n    const deleteThisBoard = () => {\r\n        deleteBoard(boardId)\r\n        history.push(\"/\")\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"delete-confirm-container\">\r\n                <h3> Are you sure you want to delete {board.name} board ?</h3>\r\n                <h5>This can not be undone and all Tasks on this board will be delete too</h5>\r\n\r\n                <div className=\"row\">\r\n                    <Button\r\n                        color=\"warning \"\r\n                        onClick={deleteThisBoard}>\r\n                        Delete\r\n                        </Button>\r\n                    <Link to={`/`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":22,"column":8,"nodeType":"79","endLine":22,"endColumn":10,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":17,"column":8,"nodeType":"79","endLine":17,"endColumn":10,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"81","line":37,"column":8,"nodeType":"79","endLine":37,"endColumn":10,"suggestions":"83"},{"ruleId":"77","severity":1,"message":"81","line":15,"column":8,"nodeType":"79","endLine":15,"endColumn":10,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllBoards'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has missing dependencies: 'boardId' and 'getBoardById'. Either include them or remove the dependency array.",["88"],["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},{"desc":"93","fix":"96"},"Update the dependencies array to be: [getAllBoards]",{"range":"97","text":"98"},"Update the dependencies array to be: [boardId, getBoardById]",{"range":"99","text":"100"},{"range":"101","text":"100"},{"range":"102","text":"100"},[798,800],"[getAllBoards]",[468,470],"[boardId, getBoardById]",[919,921],[481,483]]