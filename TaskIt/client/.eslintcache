[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"17","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js":"18","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js":"19","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\DeleteTask.js":"20","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskEditForm.js":"21"},{"size":716,"mtime":1612459642743,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":762,"mtime":1615303514161,"results":"25","hashOfConfig":"23"},{"size":2752,"mtime":1615303514183,"results":"26","hashOfConfig":"23"},{"size":3624,"mtime":1614482410135,"results":"27","hashOfConfig":"23"},{"size":1589,"mtime":1614888864532,"results":"28","hashOfConfig":"23"},{"size":2536,"mtime":1614482401009,"results":"29","hashOfConfig":"23"},{"size":3800,"mtime":1612459642757,"results":"30","hashOfConfig":"23"},{"size":1649,"mtime":1614888864543,"results":"31","hashOfConfig":"23"},{"size":3626,"mtime":1615308356040,"results":"32","hashOfConfig":"23"},{"size":3644,"mtime":1615303817049,"results":"33","hashOfConfig":"23"},{"size":1884,"mtime":1615306582869,"results":"34","hashOfConfig":"23"},{"size":3128,"mtime":1615305660252,"results":"35","hashOfConfig":"23"},{"size":4867,"mtime":1615309164239,"results":"36","hashOfConfig":"23"},{"size":2081,"mtime":1615310301820,"results":"37","hashOfConfig":"23"},{"size":1883,"mtime":1615061974352,"results":"38","hashOfConfig":"23"},{"size":1282,"mtime":1615303514198,"results":"39","hashOfConfig":"23"},{"size":3874,"mtime":1615303514215,"results":"40","hashOfConfig":"23"},{"size":4373,"mtime":1614976749691,"results":"41","hashOfConfig":"23"},{"size":1381,"mtime":1614979807305,"results":"42","hashOfConfig":"23"},{"size":5773,"mtime":1614999093049,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"v3c2y3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["93","94"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["95"],"import React, { useContext, useEffect } from 'react';\r\nimport { BoardContext } from '../providers/BoardProvider';\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col } from \"reactstrap\"\r\nimport \"./Home.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getAllBoards, boards } = useContext(BoardContext);\r\n    const history = useHistory();\r\n\r\n\r\n    //useEffect is automatically invoked and since the dependency array is empty, it only runs the first time the component renders.You can include dependencies in the array to cause the useEffect to run additional times.\r\n    useEffect(() => {\r\n\r\n        getAllBoards();\r\n\r\n    }, [])\r\n\r\n\r\n    //taking the user to the board form \r\n    const goToBoardForm = () => {\r\n        history.push(\"/BoardForm\");\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <div className='icons'>\r\n                    <AiOutlinePlusCircle\r\n                        size=\"2em\"\r\n                        color=\"#2A9d8F\"\r\n                        onClick={goToBoardForm}\r\n                        className='plus-icon' />\r\n                </div>\r\n\r\n                <h1 className=\"home\">Welcome {user.name.split(\" \")[0]}!</h1>\r\n                <p className=\"home2\">Click on a  <strong className=\"tag\">Board</strong> to view tasks</p>\r\n                <Col className=\"listOfBoards\">\r\n                    <BoardList boards={boards} />\r\n                </Col>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["96","97"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["98"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js",["99"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",["100","101"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\n\r\nconst TaskList = ({ tasks }) => {\r\n    const { getBoardById } = useContext(BoardContext);\r\n    const { getTaskById } = useContext(TaskContext);\r\n    const { boardId, taskId } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        getBoardById(boardId)\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getTaskById(taskId)\r\n\r\n    }, [])\r\n\r\n    //mapping through the list of tasks\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => (\r\n                <div key={task.id} >\r\n                    <Link to={`/board/${task.boardId}/task/${task.id}`}>\r\n                        <strong>{task.name}</strong>\r\n                    </Link>\r\n\r\n                    <div className='icons'>\r\n                        <Link to={`/board/${boardId}/TaskEditForm/${taskId}`}>\r\n                            <FiEdit\r\n                                size=\"2em\"\r\n                                color=\"#2A9d8F\"\r\n                                taskId={task}\r\n                                className='edit-icon' />\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className='icons'>\r\n                        <Link to={`/DeleteTask/${task.id}`}>\r\n                            <RiDeleteBin5Line\r\n                                size=\"2em\"\r\n                                color=\"#2A9d8F\"\r\n                                className='delete-icon' />\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default TaskList","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["102","103","104"],"import React, { useEffect, useContext } from \"react\";\r\nimport { TiArrowBack } from \"react-icons/ti\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\n// import { TiArrowBack } from \"react-icons/ti\"\r\n\r\n\r\nconst Task = ({ props }) => {\r\n    const { getTaskById, task } = useContext(TaskContext)\r\n    const { board } = useContext(BoardContext)\r\n    const { taskId } = useParams();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getTaskById(taskId)\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className='icons'>\r\n                <Link to={`/board/${board.id}`}>\r\n                    <TiArrowBack\r\n                        size=\"2em\"\r\n                        color=\"#2A9d8F\"\r\n                        taskId={task}\r\n                        className='back-icon' />\r\n                </Link>\r\n            </div>\r\n            <h3 className=\"TaskName\">{task.name} Task</h3>\r\n            <h3>Notes</h3>\r\n            <p>{task.notes}</p>\r\n            <h3>SubTask</h3>\r\n            <h3>Priority</h3>\r\n            <p>{task.priorityId}</p>\r\n\r\n\r\n\r\n            <h3>Date Created: {task.dateCreated}</h3>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Task","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js",["105"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\n\r\n\r\nconst TaskForm = () => {\r\n    const { addTask } = useContext(TaskContext)\r\n    const { board } = useContext(BoardContext)\r\n    const [task, setTask] = useState({ name: \"\", note: \"\", priorityId: 1, isComplete: false, dateTime: \"\" })\r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n\r\n    //getting the boardId \r\n    const createBoardId = () => {\r\n        const newTask = task\r\n        newTask[\"boardId\"] = boardId\r\n        setTask(newTask);\r\n    }\r\n\r\n    //useEffect for createBoardId function \r\n    useEffect(() => {\r\n        createBoardId();\r\n    }, [])\r\n\r\n\r\n    //this is updating the task and setting it as the new task and parsing the priority\r\n    //The parseInt function converts its first argument to a string, parses that string, then returns an integer or NaN\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault()\r\n        const newTask = { ...task };\r\n        newTask[evt.target.id] = evt.target.value;\r\n        newTask.priorityId = parseInt(newTask.priorityId)\r\n        setTask(newTask);\r\n\r\n    }\r\n    //this is creating the new task in the database then taking us back to the board we are currently on \r\n    const createNewTask = (evt) => {\r\n        if (task.name === \"\") {\r\n            alert(\"Please enter a Task Name\")\r\n        } else {\r\n            addTask(boardId, task)\r\n            history.push(`/board/${boardId}`);\r\n        }\r\n    };\r\n\r\n    //updateTaskDate = task, then setting the date to current day and time, then updating set task to the updated day and time in the database\r\n    const createDate = () => {\r\n        const updateTaskDate = task\r\n        updateTaskDate[\"dateTime\"] = Date.now()\r\n        setTask(updateTaskDate)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Task Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter new task name\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                            <Label for=\"notes\">Notes</Label>\r\n                            <Input\r\n                                id=\"notes\"\r\n                                type=\"text\"\r\n                                name=\"notes\"\r\n                                placeholder=\"Enter notes\"\r\n                                onChange={(evt) => handleSubmit(evt)}\r\n                            />\r\n                            <Label for=\"priority\">Choose a Priority</Label>\r\n                            <select\r\n                                required\r\n                                className=\"form-control\"\r\n                                id=\"priorityId\"\r\n                                value={task.priorityId}\r\n                                onChange={(evt) => handleSubmit(evt)}>\r\n                                <option value=\"1\">None</option>\r\n                                <option value=\"2\">Low</option>\r\n                                <option value=\"3\">Medium</option>\r\n                                <option value=\"4\">High</option>\r\n\r\n                            </select>\r\n\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning\"\r\n                        onClick={(evt) => {\r\n                            evt.preventDefault();\r\n                            createDate();\r\n                            createNewTask();\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Link to={`/board/${board.id}`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n};\r\nexport default TaskForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\DeleteTask.js",["106"],"import React, { useEffect, useContext } from \"react\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\"\r\n\r\n\r\n\r\nexport default function DeleteTask() {\r\n    const { task, deleteTask, getTaskById } = useContext(TaskContext);\r\n    const { board } = useContext(BoardContext);\r\n    const { taskId } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getTaskById((taskId))\r\n    }, [])\r\n\r\n    const deleteThisTask = () => {\r\n        deleteTask(taskId)\r\n        history.push(`/board/${board.id}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"delete-confirm-container\">\r\n                <h3> Are you sure you want to delete {task.name} Task ?</h3>\r\n                <h5>This can not be undone and all SubTask on this Task will be delete too</h5>\r\n\r\n                <div className=\"row\">\r\n                    <Button\r\n                        color=\"warning \"\r\n                        onClick={deleteThisTask}>\r\n                        Delete\r\n                        </Button>\r\n                    <Link to={`/board/${board.id}`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskEditForm.js",["107"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\n\r\n\r\n\r\nconst TaskEditForm = () => {\r\n    const { getTaskById, updateTask, task } = useContext(TaskContext)\r\n    const { board } = useContext(BoardContext)\r\n\r\n    //for edit, hold on to state of task in this view\r\n    const [editTask, setEditTask] = useState({\r\n        id: task.id,\r\n        name: \"\",\r\n        notes: \"\",\r\n        priorityId: \"\",\r\n        isComplete: task.isComplete,\r\n        dateCreated: task.dateCreated,\r\n        boardId: task.boardId,\r\n        active: task.active\r\n\r\n    });\r\n    //UseParams pulls in the id information from applications view \r\n    const { taskId } = useParams();\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        getTaskById(taskId)\r\n\r\n    }, [])\r\n\r\n    //sets the task at the start\r\n    useEffect(() => {\r\n        setEditTask(task)\r\n    }, [task]);\r\n\r\n\r\n    //updating boardToEdit value. Updates boardToEdit value on every key stroke for the input field\r\n    const handleFieldChange = (evt) => {\r\n        const newTask = { ...editTask };\r\n        newTask[evt.target.id] = evt.target.value;\r\n        setEditTask(newTask);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const editATask = (event) => {\r\n        event.preventDefault()\r\n        updateTask({\r\n            id: editTask.id,\r\n            name: editTask.name,\r\n            notes: editTask.notes,\r\n            priorityId: editTask.priorityId,\r\n            isComplete: editTask.isComplete,\r\n            dateCreated: editTask.dateCreated,\r\n            boardId: editTask.boardId,\r\n            active: editTask.active\r\n\r\n        })\r\n        history.push(`/board/${board.id}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input\r\n                                id={editTask.id}\r\n                                onChange={handleFieldChange}\r\n                                type=\"hidden\"\r\n                                value={editTask.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={editTask.name}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                            <Input\r\n                                id=\"notes\"\r\n                                type=\"text\"\r\n                                name=\"notes\"\r\n                                value={editTask.notes}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                            <Label for=\"priority\">Priority</Label>\r\n                            <select\r\n\r\n                                id=\"priorityId\"\r\n                                value={editTask.priorityId}\r\n                                onChange={(evt) => handleFieldChange(evt)}>\r\n                                <option value=\"1\">None</option>\r\n                                <option value=\"2\">Low</option>\r\n                                <option value=\"3\">Medium</option>\r\n                                <option value=\"4\">High</option>\r\n\r\n                            </select>\r\n\r\n                        </FormGroup>\r\n                        <Input\r\n                            id={editTask.isComplete}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.isComplete}\r\n                        />\r\n                        <Input\r\n                            id={editTask.dateCreated}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.dateCreated}\r\n                        />\r\n                        <Input\r\n                            id={editTask.boardId}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.boardId}\r\n                        />\r\n                        <Input\r\n                            id={editTask.active}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.active}\r\n                        />\r\n                        <FormGroup>\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={editATask}\r\n\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Link to={`/board/${board.id}`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskEditForm;",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":22,"column":8,"nodeType":"114","endLine":22,"endColumn":10,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":30,"column":8,"nodeType":"114","endLine":30,"endColumn":10,"suggestions":"117"},{"ruleId":"112","severity":1,"message":"118","line":36,"column":8,"nodeType":"114","endLine":36,"endColumn":10,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"116","line":38,"column":8,"nodeType":"114","endLine":38,"endColumn":10,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"116","line":20,"column":8,"nodeType":"114","endLine":20,"endColumn":10,"suggestions":"121"},{"ruleId":"112","severity":1,"message":"116","line":18,"column":8,"nodeType":"114","endLine":18,"endColumn":10,"suggestions":"122"},{"ruleId":"112","severity":1,"message":"123","line":23,"column":8,"nodeType":"114","endLine":23,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":15,"column":42,"nodeType":"127","messageId":"128","endLine":15,"endColumn":47},{"ruleId":"112","severity":1,"message":"123","line":27,"column":8,"nodeType":"114","endLine":27,"endColumn":10,"suggestions":"129"},{"ruleId":"112","severity":1,"message":"118","line":33,"column":8,"nodeType":"114","endLine":33,"endColumn":10,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"131","line":34,"column":8,"nodeType":"114","endLine":34,"endColumn":10,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"123","line":17,"column":8,"nodeType":"114","endLine":17,"endColumn":10,"suggestions":"133"},{"ruleId":"112","severity":1,"message":"123","line":41,"column":8,"nodeType":"114","endLine":41,"endColumn":10,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllBoards'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook useEffect has missing dependencies: 'boardId' and 'getBoardById'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has missing dependencies: 'boardId' and 'getTasks'. Either include them or remove the dependency array.",["139"],["140"],["141"],["142"],"React Hook useEffect has missing dependencies: 'getTaskById' and 'taskId'. Either include them or remove the dependency array.",["143"],"no-unused-vars","'tasks' is assigned a value but never used.","Identifier","unusedVar",["144"],["145"],"React Hook useEffect has a missing dependency: 'createBoardId'. Either include it or remove the dependency array.",["146"],["147"],["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"151","fix":"155"},{"desc":"151","fix":"156"},{"desc":"151","fix":"157"},{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"153","fix":"161"},{"desc":"162","fix":"163"},{"desc":"158","fix":"164"},{"desc":"158","fix":"165"},"Update the dependencies array to be: [getAllBoards]",{"range":"166","text":"167"},"Update the dependencies array to be: [boardId, getBoardById]",{"range":"168","text":"169"},"Update the dependencies array to be: [boardId, getTasks]",{"range":"170","text":"171"},{"range":"172","text":"169"},{"range":"173","text":"169"},{"range":"174","text":"169"},"Update the dependencies array to be: [getTaskById, taskId]",{"range":"175","text":"176"},{"range":"177","text":"176"},{"range":"178","text":"171"},"Update the dependencies array to be: [createBoardId]",{"range":"179","text":"180"},{"range":"181","text":"176"},{"range":"182","text":"176"},[798,800],"[getAllBoards]",[1673,1675],"[boardId, getBoardById]",[1742,1744],"[boardId, getTasks]",[1277,1279],[879,881],[622,624],[690,692],"[getTaskById, taskId]",[864,866],[932,934],[958,960],"[createBoardId]",[583,585],[1078,1080]]