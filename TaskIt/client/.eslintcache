[{"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js":"1","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js":"2","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js":"3","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js":"6","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js":"7","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js":"8","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js":"9","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js":"10","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js":"11","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js":"12","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js":"13","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js":"14","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js":"15","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js":"16","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js":"17","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js":"18","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js":"19","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\DeleteTask.js":"20","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskEditForm.js":"21","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\SubTaskProvider.js":"22","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTask.js":"23","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskList.js":"24","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskForm.js":"25","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\DeleteSubTask.js":"26","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskEditForm.js":"27"},{"size":716,"mtime":1612459642743,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":897,"mtime":1615912793390,"results":"31","hashOfConfig":"29"},{"size":3884,"mtime":1615951962558,"results":"32","hashOfConfig":"29"},{"size":3624,"mtime":1614482410135,"results":"33","hashOfConfig":"29"},{"size":1589,"mtime":1614888864532,"results":"34","hashOfConfig":"29"},{"size":2536,"mtime":1614482401009,"results":"35","hashOfConfig":"29"},{"size":3800,"mtime":1612459642757,"results":"36","hashOfConfig":"29"},{"size":1604,"mtime":1615912793420,"results":"37","hashOfConfig":"29"},{"size":3626,"mtime":1615409665158,"results":"38","hashOfConfig":"29"},{"size":3654,"mtime":1615912793541,"results":"39","hashOfConfig":"29"},{"size":2638,"mtime":1615409665162,"results":"40","hashOfConfig":"29"},{"size":3228,"mtime":1615920762447,"results":"41","hashOfConfig":"29"},{"size":4782,"mtime":1615912793409,"results":"42","hashOfConfig":"29"},{"size":2081,"mtime":1615948261444,"results":"43","hashOfConfig":"29"},{"size":2453,"mtime":1615912793533,"results":"44","hashOfConfig":"29"},{"size":3128,"mtime":1615922462632,"results":"45","hashOfConfig":"29"},{"size":3996,"mtime":1615912793550,"results":"46","hashOfConfig":"29"},{"size":5848,"mtime":1615923976534,"results":"47","hashOfConfig":"29"},{"size":1381,"mtime":1615950214453,"results":"48","hashOfConfig":"29"},{"size":7084,"mtime":1615912793492,"results":"49","hashOfConfig":"29"},{"size":3470,"mtime":1615912793546,"results":"50","hashOfConfig":"29"},{"size":1393,"mtime":1615920170617,"results":"51","hashOfConfig":"29"},{"size":2362,"mtime":1615951819236,"results":"52","hashOfConfig":"29"},{"size":2887,"mtime":1615924267132,"results":"53","hashOfConfig":"29"},{"size":1506,"mtime":1615950240540,"results":"54","hashOfConfig":"29"},{"size":4562,"mtime":1615952636530,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"v3c2y3",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\index.js",[],["115","116"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\reportWebVitals.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\App.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Header.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Login.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\pages\\Register.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Home.js",["117"],"import React, { useContext, useEffect } from 'react';\r\nimport { BoardContext } from '../providers/BoardProvider';\r\nimport BoardList from \"./Board/BoardList\";\r\nimport { Col, Row, Container } from \"reactstrap\"\r\nimport \"./Home.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const user = JSON.parse(localStorage.getItem(\"userProfile\"));\r\n    const { getAllBoards, boards } = useContext(BoardContext);\r\n    const history = useHistory();\r\n\r\n\r\n    //useEffect is automatically invoked and since the dependency array is empty, it only runs the first time the component renders.You can include dependencies in the array to cause the useEffect to run additional times.\r\n    useEffect(() => {\r\n\r\n        getAllBoards();\r\n\r\n    }, [])\r\n\r\n\r\n    //taking the user to the board form \r\n    const goToBoardForm = () => {\r\n        history.push(\"/BoardForm\");\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n\r\n            <h1 className=\"home\">Welcome {user.name.split(\" \")[0]}!</h1>\r\n            <p className=\"home2\">Click on a Board to view tasks</p>\r\n            <div className='homeIconContainer'>\r\n                <p className=\"AddBoardName\">Add Board</p>\r\n                <AiOutlinePlusCircle\r\n                    size=\"2em\"\r\n                    color=\"#2A9d8F\"\r\n                    onClick={goToBoardForm}\r\n                    className='home-plus-icon' />\r\n            </div>\r\n            <Col className=\"listOfBoards\">\r\n\r\n                <BoardList boards={boards} />\r\n            </Col>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Home\r\n\r\n","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardForm.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\BoardProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardList.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\Board.js",["118"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\BoardEditForm.js",["119","120"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\n\r\n\r\n//defining the BoardEditFrom method and not passing anything\r\nconst BoardEditForm = () => {\r\n    //bringing in these methods from BoardContext by using useContext\r\n    const { getBoardById, updateBoard, board } = useContext(BoardContext)\r\n\r\n    //editBoard hold on to state of board in this view. The only thing we are changing is the name which is why its an empty string\r\n    //setEditBoard will allow us to update the board\r\n    const [editBoard, setEditBoard] = useState({\r\n        id: board.id,\r\n        name: \"\",\r\n        userProfileId: board.userProfileId,\r\n        active: board.active\r\n\r\n    });\r\n    //UseParams pulls in the id information from applications view \r\n    const { boardId } = useParams();\r\n    const history = useHistory();\r\n\r\n    //useEffects will come back to these methods after render\r\n    //so after the render it will come back and get the boardId and setEditBoard\r\n    useEffect(() => {\r\n        getBoardById(boardId)\r\n\r\n    }, [])\r\n\r\n    //sets the board at the start\r\n    useEffect(() => {\r\n        setEditBoard(board)\r\n    }, [board]);\r\n\r\n\r\n    //updating board value. Updates board value on every key stroke for the input field\r\n    const handleFieldChange = (evt) => {\r\n        //making a copy of editBoard and calling newBoard\r\n        const newBoard = { ...editBoard };\r\n        //the newBoard id equal the value\r\n        newBoard[evt.target.id] = evt.target.value;\r\n        //update the newBoard\r\n        setEditBoard(newBoard);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const editABoard = (event) => {\r\n        //this stops the user from pushing the button multiple times\r\n        event.preventDefault()\r\n        //update method key/value \r\n        updateBoard({\r\n            id: editBoard.id,\r\n            name: editBoard.name,\r\n            userProfileId: editBoard.userProfileId,\r\n            active: editBoard.active\r\n\r\n        })\r\n        //history.push takes the user back to the home page\r\n        history.push(\"/\");\r\n    };\r\n\r\n    //return 1.I have input fields for each property for board but I am only updating the board name. The other inputs are hidden\r\n    //2. submit button with an onclick that passing the editABoard method then submit. \r\n    //3. cancel button that take the user back home. I use the Link to go back home\r\n    //then we export the EditBoardForm so we can use it in other components\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input\r\n                                id={editBoard.id}\r\n                                onChange={handleFieldChange}\r\n                                type=\"hidden\"\r\n                                value={editBoard.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={editBoard.name}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                        </FormGroup>\r\n                        <Input\r\n                            id={editBoard.userProfileId}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editBoard.userProfileId}\r\n                        />\r\n                        <Input\r\n                            id={editBoard.active}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editBoard.active}\r\n                        />\r\n                        <FormGroup>\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={editABoard}\r\n\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Link to={`/`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default BoardEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Board\\DeleteBoard.js",["121"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskList.js",["122"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\n\r\nconst TaskList = ({ tasks }) => {\r\n    const { getBoardById } = useContext(BoardContext);\r\n\r\n    const { boardId, taskId } = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        getBoardById(boardId)\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    //mapping through the list of tasks\r\n    //xs is at the smallest size it will take up the amount of space we give it. If you wanted to take the whole space you would be 12 auto what is left out of that pie graph \r\n    //I used the Row to have the icons next to the BoardName vertically and Col have the BoardName and icon list horizontally. The extra Row and Col is to help with spacing\r\n    return (\r\n        <div>\r\n            {tasks.map((task) => (\r\n                <div key={task.name} >\r\n                    <Row>\r\n                        <Col xs=\"3\">\r\n                            <Link to={`/board/${task.boardId}/task/${task.id}`}>\r\n                                <strong>{task.name}</strong>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs=\"auto\"></Col>\r\n                        <Col xs=\"auto\"></Col>\r\n                        <Col xs=\"2\" className='icons'>\r\n                            <Link to={`/board/${boardId}/TaskEditForm/${task.id}`}>\r\n                                <FiEdit\r\n                                    size=\"2em\"\r\n                                    color=\"#2A9d8F\"\r\n                                    task={task}\r\n                                    className='edit-icon' />\r\n                            </Link>\r\n                        </Col>\r\n\r\n                        <Col xs=\"2\" className='icons'>\r\n                            <Link to={`/DeleteTask/${task.id}`}>\r\n                                <RiDeleteBin5Line\r\n                                    size=\"2em\"\r\n                                    color=\"#2A9d8F\"\r\n                                    className='delete-icon' />\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row><br></br></Row>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default TaskList","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\Task.js",["123"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\TaskProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskForm.js",["124"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\DeleteTask.js",["125"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\Task\\TaskEditForm.js",["126","127"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams, Link } from \"react-router-dom\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Card,\r\n    CardBody,\r\n    Label,\r\n    Input,\r\n    Button,\r\n} from \"reactstrap\";\r\nimport { BoardContext } from \"../../providers/BoardProvider\";\r\nimport { TaskContext } from \"../../providers/TaskProvider\";\r\n\r\n\r\n//defining  the TaskEditForm and not passing anything\r\nconst TaskEditForm = () => {\r\n    //bringing in the functions from TaskContext using useContext\r\n    //Task object bring the properties for task \r\n    const { getTaskById, updateTask, task } = useContext(TaskContext)\r\n    //board object bring the properties for board from BoardContext using useContext\r\n    const { board } = useContext(BoardContext)\r\n\r\n    //for edit, hold on to state of task in this view\r\n    //setEditTask allow us to update state\r\n    const [editTask, setEditTask] = useState({\r\n        id: task.id,\r\n        name: \"\",\r\n        notes: \"\",\r\n        priorityId: task.priorityId,\r\n        isComplete: task.isComplete,\r\n        dateCreated: task.dateCreated,\r\n        boardId: task.boardId,\r\n        active: task.active\r\n\r\n    });\r\n    //UseParams pulls in the id information from applications view \r\n    const { taskId } = useParams();\r\n    //useHistory allows us to undo/redo and change or navigate to different pages\r\n    //ex history.push takes the user back to the board page there were on after editing the task \r\n    const history = useHistory();\r\n\r\n    //useEffects renders the page then come back and gets the taskId\r\n    useEffect(() => {\r\n        getTaskById(taskId)\r\n\r\n    }, [])\r\n\r\n    //sets the task at the start\r\n    useEffect(() => {\r\n        setEditTask(task)\r\n    }, []);\r\n\r\n\r\n    //updating editTask value. Updates editTask value on every key stroke for the input field\r\n    const handleFieldChange = (evt) => {\r\n        //making a copy of editTask called newTask\r\n        const newTask = { ...editTask };\r\n        //saying newTask id equals the value\r\n        newTask[evt.target.id] = evt.target.value;\r\n        //updating the newTask\r\n        setEditTask(newTask);\r\n    };\r\n\r\n    // update function to update the database with the new state of the board name\r\n    const editATask = (event) => {\r\n        //stops the user from hitting the submit button multiply times\r\n        event.preventDefault()\r\n        //updateTask method\r\n        updateTask({\r\n            id: editTask.id,\r\n            name: editTask.name,\r\n            notes: editTask.notes,\r\n            priorityId: editTask.priorityId,\r\n            isComplete: editTask.isComplete,\r\n            dateCreated: editTask.dateCreated,\r\n            boardId: editTask.boardId,\r\n            active: editTask.active\r\n\r\n        })\r\n        //taking the user back to the board they were on \r\n        history.push(`/board/${board.id}`);\r\n    };\r\n    //return 1. input fields for each task property. The name, notes, and priority are the only ones you can change the others are hidden\r\n    //2.submit button with an onClick that calls the editATask function\r\n    //3. cancel button that takes the user back to the board they were on. I used the Link to take then back to the board page.\r\n    //export the TaskEditForm to use in other components\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Input\r\n                                id={editTask.id}\r\n                                onChange={handleFieldChange}\r\n                                type=\"hidden\"\r\n                                value={editTask.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Board Name</Label>\r\n                            <Input\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={editTask.name}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                            <Label for=\"name\">Board Notes</Label>\r\n                            <Input\r\n                                id=\"notes\"\r\n                                type=\"text\"\r\n                                name=\"notes\"\r\n                                value={editTask.notes}\r\n\r\n                                onChange={(evt) => {\r\n                                    evt.preventDefault()\r\n                                    handleFieldChange(evt)\r\n                                }}\r\n                            />\r\n                            <Label for=\"priority\">Priority</Label>\r\n\r\n                            <select\r\n\r\n                                id=\"priorityId\"\r\n                                value={editTask.priorityId}\r\n                                onChange={(evt) => handleFieldChange(evt)}>\r\n                                <option value=\"1\">None</option>\r\n                                <option value=\"2\">Low</option>\r\n                                <option value=\"3\">Medium</option>\r\n                                <option value=\"4\">High</option>\r\n\r\n                            </select>\r\n\r\n\r\n                        </FormGroup>\r\n                        <Input\r\n                            id={editTask.isComplete}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.isComplete}\r\n                        />\r\n                        <Input\r\n                            id={editTask.dateCreated}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.dateCreated}\r\n                        />\r\n                        <Input\r\n                            id={editTask.boardId}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.boardId}\r\n                        />\r\n                        <Input\r\n                            id={editTask.active}\r\n                            onChange={handleFieldChange}\r\n                            type=\"hidden\"\r\n                            value={editTask.active}\r\n                        />\r\n                        <FormGroup>\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                    </Form>\r\n                    <Button\r\n\r\n                        color=\"warning \"\r\n                        onClick={editATask}\r\n\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                    <Link to={`/board/${board.id}`}><Button type=\"button\" color=\"warning\">Cancel</Button></Link>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default TaskEditForm;","C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\providers\\SubTaskProvider.js",[],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTask.js",["128"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskList.js",["129"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskForm.js",["130","131","132"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\DeleteSubTask.js",["133"],"C:\\Users\\faith\\workspace-43\\capstone\\TaskIt\\TaskIt\\client\\src\\components\\SubTask\\SubTaskEditForm.js",["134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":22,"column":8,"nodeType":"142","endLine":22,"endColumn":10,"suggestions":"143"},{"ruleId":"140","severity":1,"message":"144","line":37,"column":8,"nodeType":"142","endLine":37,"endColumn":10,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"146","line":38,"column":8,"nodeType":"142","endLine":38,"endColumn":10,"suggestions":"147"},{"ruleId":"140","severity":1,"message":"148","line":43,"column":8,"nodeType":"142","endLine":43,"endColumn":10,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"146","line":20,"column":8,"nodeType":"142","endLine":20,"endColumn":10,"suggestions":"150"},{"ruleId":"140","severity":1,"message":"146","line":18,"column":8,"nodeType":"142","endLine":18,"endColumn":10,"suggestions":"151"},{"ruleId":"140","severity":1,"message":"152","line":32,"column":8,"nodeType":"142","endLine":32,"endColumn":10,"suggestions":"153"},{"ruleId":"140","severity":1,"message":"154","line":45,"column":8,"nodeType":"142","endLine":45,"endColumn":10,"suggestions":"155"},{"ruleId":"140","severity":1,"message":"156","line":17,"column":8,"nodeType":"142","endLine":17,"endColumn":10,"suggestions":"157"},{"ruleId":"140","severity":1,"message":"156","line":47,"column":8,"nodeType":"142","endLine":47,"endColumn":10,"suggestions":"158"},{"ruleId":"140","severity":1,"message":"159","line":52,"column":8,"nodeType":"142","endLine":52,"endColumn":10,"suggestions":"160"},{"ruleId":"140","severity":1,"message":"161","line":19,"column":8,"nodeType":"142","endLine":19,"endColumn":10,"suggestions":"162"},{"ruleId":"140","severity":1,"message":"156","line":22,"column":8,"nodeType":"142","endLine":22,"endColumn":10,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":20,"column":13,"nodeType":"166","messageId":"167","endLine":20,"endColumn":17},{"ruleId":"164","severity":1,"message":"168","line":21,"column":13,"nodeType":"166","messageId":"167","endLine":21,"endColumn":18},{"ruleId":"140","severity":1,"message":"169","line":39,"column":8,"nodeType":"142","endLine":39,"endColumn":10,"suggestions":"170"},{"ruleId":"140","severity":1,"message":"161","line":17,"column":8,"nodeType":"142","endLine":17,"endColumn":10,"suggestions":"171"},{"ruleId":"140","severity":1,"message":"161","line":34,"column":8,"nodeType":"142","endLine":34,"endColumn":10,"suggestions":"172"},{"ruleId":"140","severity":1,"message":"173","line":40,"column":8,"nodeType":"142","endLine":40,"endColumn":10,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllBoards'. Either include it or remove the dependency array.","ArrayExpression",["177"],"React Hook useEffect has missing dependencies: 'boardId' and 'getTasks'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'boardId' and 'getBoardById'. Either include them or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.",["180"],["181"],["182"],"React Hook useEffect has missing dependencies: 'getSubTasks', 'getTaskById', and 'taskId'. Either include them or remove the dependency array.",["183"],"React Hook useEffect has missing dependencies: 'boardId' and 'task'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has missing dependencies: 'getTaskById' and 'taskId'. Either include them or remove the dependency array.",["185"],["186"],"React Hook useEffect has a missing dependency: 'task'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'getSubTaskById' and 'subTaskId'. Either include them or remove the dependency array.",["188"],["189"],"no-unused-vars","'task' is assigned a value but never used.","Identifier","unusedVar","'board' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'boardId', 'subTask', and 'taskId'. Either include them or remove the dependency array.",["190"],["191"],["192"],"React Hook useEffect has a missing dependency: 'subTask'. Either include it or remove the dependency array.",["193"],"no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"198","fix":"202"},{"desc":"198","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"208","fix":"215"},{"desc":"216","fix":"217"},{"desc":"213","fix":"218"},{"desc":"213","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [getAllBoards]",{"range":"222","text":"223"},"Update the dependencies array to be: [boardId, getTasks]",{"range":"224","text":"225"},"Update the dependencies array to be: [boardId, getBoardById]",{"range":"226","text":"227"},"Update the dependencies array to be: [board]",{"range":"228","text":"229"},{"range":"230","text":"227"},{"range":"231","text":"227"},"Update the dependencies array to be: [getSubTasks, getTaskById, taskId]",{"range":"232","text":"233"},"Update the dependencies array to be: [boardId, task]",{"range":"234","text":"235"},"Update the dependencies array to be: [getTaskById, taskId]",{"range":"236","text":"237"},{"range":"238","text":"237"},"Update the dependencies array to be: [task]",{"range":"239","text":"240"},"Update the dependencies array to be: [getSubTaskById, subTaskId]",{"range":"241","text":"242"},{"range":"243","text":"237"},"Update the dependencies array to be: [boardId, subTask, taskId]",{"range":"244","text":"245"},{"range":"246","text":"242"},{"range":"247","text":"242"},"Update the dependencies array to be: [subTask]",{"range":"248","text":"249"},[798,800],"[getAllBoards]",[1767,1769],"[boardId, getTasks]",[1197,1199],"[boardId, getBoardById]",[1298,1300],"[board]",[879,881],[541,543],[1270,1272],"[getSubTasks, getTaskById, taskId]",[1597,1599],"[boardId, task]",[583,585],"[getTaskById, taskId]",[1641,1643],[1739,1741],"[task]",[775,777],"[getSubTaskById, subTaskId]",[694,696],[1111,1113],"[boardId, subTask, taskId]",[714,716],[1013,1015],[1122,1124],"[subTask]"]